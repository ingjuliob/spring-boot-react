{"version":3,"sources":["reportWebVitals.js","img/logo.svg","components/commonsModule/navbarModule.js","components/services/utilsService.js","components/services/baseService.js","components/commonsModule/helpModule.js","components/commonsModule/buttonsModule.js","components/commonsModule/loadingModule.js","components/commonsModule/snackbarModule.js","components/commonsModule/dialogsModule.js","components/services/reprintService.js","components/reprintModule/reprintModule.js","components/dischargeModule/dischargeModule.js","components/resetPinModule/resetPinModule.js","components/services/closeChangeService.js","components/closeChangeModule/closeChangeModule.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","root","flexGrow","borderRadius","appbar","background","paddingTop","paddingBottom","marginBottom","color","navbarTitle","textAlign","fontStyle","CenteredGrid","option","useParams","React","useState","tipo","setTipo","classes","useEffect","className","AppBar","position","Container","maxWidth","Toolbar","src","logo","alt","Typography","variant","UtilsService","URL","_call_get","url","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","res","json","catch","err","console","log","_call_post","body","JSON","stringify","_call_post_blob","filename","requestNumber","response","blob","href","window","createObjectURL","link","document","createElement","setAttribute","appendChild","click","getCommonParams","operationId","productCode","causeCode","companyCode","documentType","documentNumber","productNumber","origin","user","contactMode","reasonCode","responsibleSector","registerSector","initContact","closeContact","commonParams","reasoncode","retry","BaseService","getHelp","saveData","transactionalRequest","printData","helpText","setHelpText","a","dataHelp","message","callAPI","Alert","severity","AlertTitle","button","margin","marginTop","textTransform","backgroundColor","buttonOutlined","alignItems","getConfirmation","disable","valueButton","Button","size","disabled","startIcon","onClick","backdrop","zIndex","drawer","buttonProgress","red","top","left","spacing","display","Loading","loading","Backdrop","open","CircularProgress","props","elevation","width","CustomizedSnackbars","openSnackbar","setOpenSnackbar","handleClose","reason","Snackbar","autoHideDuration","onClose","resultRequest","resultStatus","resultMsg","firstOpen","setFirstOpen","secondOpen","setSecondOpen","printScreen","useTheme","fullScreen","useMediaQuery","breakpoints","down","Confirmation","gutterBottom","component","handleCloseFirst","handleCloseSecond","Dialog","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","style","ReprintService","getEmbozos","code","getCardDetails","cardNumber","getBranchDetails","pos","divider","formControl","Accordion","withStyles","boxShadow","borderBottom","expanded","MuiAccordion","AccordionSummary","minHeight","content","MuiAccordionSummary","AccordionDetails","padding","MuiAccordionDetails","ReprintFunc","businessName","contactModeCode","embozos","setEmbozos","sucursales","setSucursales","setDisable","value","setValue","setExpanded","selectedDestino","setSelectedDestino","selectedSucursal","setSelectedSucursal","setResultRequest","setResultStatus","setResultMsg","setLoading","showDomicilio","setShowDomicilio","showSucursal","setShowSucursal","showExterior","setShowExterior","setSeverity","setMessage","domicilioEmbozo","useRef","domicilioCategoria","sucursalEmbozo","sucursalCategoria","exteriorEmbozo","exteriorCategoria","handleChange","panel","event","newExpanded","dataSucursales","branches","target","data","detalleTarjeta","reprint","dataEmbozos","map","embozo","destino","_getReprintTdParams","category","domicilio","sucursal","reprintTdParams","Grid","container","item","lg","Card","CardContent","Divider","square","aria-controls","FormControl","RadioGroup","aria-label","name","onChange","FormControlLabel","control","Radio","label","filter","fEmbozo","ref","categoria","xs","Select","MenuItem","numBranch","branch","current","outerText","pedido","registration","mensaje","estado","status","DischargeFunc","CloseChangeService","getTarjetas","docType","docNum","formControl2","minWidth","selectEmpty","tabla","table","CloseChangeFunc","cartera","setCartera","rows","setRows","classTable","cardAccArr","_getCloseChangeParams","row","closeChangeParams","apellidoNombre","cardhName","nroTarjeta","cardNum","primAcctInfo","statDesc","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","scope","typeIdfcCde","idfcNum","commonsParams","App","basename","path","process","Reprint","Discharge","ResetPin","CloseChange","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b32569c9.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/logo.a1dd3a73.svg\";","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport logo from '../../img/logo.svg';\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  appbar: { background: 'white', paddingTop: 10, paddingBottom: 10, marginBottom: 25, color: 'black' },\r\n  navbarTitle: { flexGrow: 1, textAlign: 'right', fontStyle: 'uppercase' }\r\n\r\n}));\r\n// end css\r\n\r\nexport default function CenteredGrid() {\r\n\r\n  // Entry params\r\n  let { option } = useParams();\r\n\r\n  // State variables\r\n  const [tipo, setTipo] = React.useState(\"\");\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  // Funcion hook para configurar el nombre de la transaccional de \r\n  // acuerdo al valor del parametro option recibido\r\n  React.useEffect(() => {\r\n    if (option === 'ReimprimirDiferida') {\r\n      setTipo(\"Reimpresión Diferida de Tarjeta Banelco\");\r\n    } else if (option === 'ReimprimirTarjeta') {\r\n      setTipo(\"Reimpresión Común de Tarjeta Banelco\");\r\n    } else if (option === 'BajaBanelco') {\r\n      setTipo(\"Baja de Tarjeta Banelco\");\r\n    } else if (option === 'BlanqueoPin') {\r\n      setTipo(\"Blanqueo de PIN\");\r\n    } else if (option === 'CambioCierre' || option === 'CambioCierreTC' || option === 'CbioCierreCartera') {\r\n      setTipo(\"Cambio de Cierre TC\");\r\n    }\r\n  }, [option]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appbar}>\r\n        <Container maxWidth=\"lg\">\r\n          <Toolbar>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <Typography variant=\"h6\" className={classes.navbarTitle}>\r\n              {tipo}\r\n            </Typography>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","const UtilsService = {\r\n\r\n    URL() {\r\n        return 'http://ard032vlncap.ar.hsbc:21228/sacweb/control';\r\n    },\r\n\r\n    _call_get(url) {\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer'\r\n        })\r\n            .then(res => res.json())\r\n            .catch(err => console.log(err))\r\n    },\r\n\r\n    _call_post(url, body) {\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then(res => res.json())\r\n            .catch(err => console.log(err))\r\n    },\r\n\r\n    _call_post_blob(url, body) {\r\n        let filename = body.option + \"_\" + body.requestNumber + \".pdf\";\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then(function (response) {\r\n                return response.blob();\r\n            }).then(function (blob) {\r\n                const href = window.URL.createObjectURL(blob);\r\n                const link = document.createElement('a');\r\n                link.href = href;\r\n                link.setAttribute('download', filename);\r\n                document.body.appendChild(link);\r\n                link.click();\r\n            })\r\n            .catch(err => console.log(err))\r\n    },\r\n\r\n    getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n        user, option, contactMode, reasonCode, responsibleSector, registerSector, initContact, closeContact, requestNumber) {\r\n\r\n        let commonParams = {};\r\n        commonParams.operationId = operationId;\r\n        commonParams.documentType = documentType;\r\n        commonParams.documentNumber = documentNumber;\r\n        commonParams.productNumber = productNumber;\r\n        commonParams.user = user;\r\n        commonParams.origin = origin;\r\n        commonParams.option = option;\r\n        commonParams.contactMode = contactMode;\r\n        commonParams.productCode = productCode;\r\n        commonParams.causeCode = causeCode;\r\n        commonParams.reasoncode = reasonCode;\r\n        commonParams.companyCode = companyCode;\r\n        commonParams.responsibleSector = responsibleSector;\r\n        commonParams.registerSector = registerSector;\r\n        commonParams.initContact = initContact;\r\n        commonParams.closeContact = closeContact;\r\n        commonParams.requestNumber = requestNumber;\r\n        commonParams.retry = requestNumber ? true : false;\r\n        return commonParams;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default UtilsService;","import UtilsService from \"./utilsService\";\r\n\r\nconst BaseService = {\r\n\r\n    getHelp(operationId, productCode, causeCode, reasonCode, companyCode) {\r\n        return UtilsService._call_get(UtilsService.URL() + '/transaccional/parametros/ayuda?operationId=' + operationId + '&productCode=' + productCode + '&causeCode=' + causeCode + '&reasonCode=' + reasonCode + '&companyCode=' + companyCode);\r\n    },\r\n\r\n    saveData(transactionalRequest) {\r\n        return UtilsService._call_post(UtilsService.URL() + '/transaccional/grabar', transactionalRequest);\r\n    },\r\n\r\n    printData(transactionalRequest) {\r\n        return UtilsService._call_post_blob(UtilsService.URL() + '/transaccional/imprimir', transactionalRequest);\r\n    }\r\n\r\n}\r\n\r\nexport default BaseService;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\n// services\r\nimport BaseService from '../services/baseService';\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: { flexGrow: 1, borderRadius: 0 }\r\n}))\r\n// end css\r\n\r\nexport default function CenteredGrid() {\r\n\r\n  // Entry params\r\n  let { operationId, productCode, causeCode, reasonCode, companyCode } = useParams();\r\n\r\n  // State variables\r\n  const [helpText, setHelpText] = React.useState('');\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  // Funcion hook para consultar la ayuda al operador\r\n  React.useEffect(() => {\r\n    async function callAPI() {\r\n      BaseService.getHelp(operationId, productCode, causeCode, reasonCode, companyCode)\r\n        .then(dataHelp => {\r\n          setHelpText(dataHelp.message);\r\n        })\r\n    }\r\n    callAPI();\r\n  }, [operationId, productCode, causeCode, reasonCode, companyCode]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert severity=\"info\">\r\n        <AlertTitle><strong>Tener en cuenta</strong></AlertTitle>\r\n        {helpText}\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// icons\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// start css\r\nconst useStyles = makeStyles(() => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  button: {\r\n    margin: 10, marginTop: 25, marginBottom: 30, textTransform: 'capitalize', backgroundColor: '#DB0011',\r\n    borderRadius: '0'\r\n  },\r\n  buttonOutlined: {\r\n    margin: 10, marginTop: 25, marginBottom: 30, textTransform: 'capitalize', color: '#DB0011',\r\n    borderRadius: '0'\r\n  },\r\n  alignItems: { textAlign: 'right' }\r\n\r\n}));\r\n// end css\r\n\r\nexport default function CenteredGrid({ getConfirmation, disable,valueButton }) {\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}><div className={classes.alignItems}>\r\n      <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button} disabled={disable}\r\n        startIcon={<SaveIcon />} onClick={getConfirmation}>{valueButton}</Button>\r\n\r\n      <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n        startIcon={<CloseIcon />}>Salir</Button>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport { red } from '@material-ui/core/colors';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  backdrop: { zIndex: theme.zIndex.drawer + 1, color: '#fff' },\r\n  buttonProgress: {\r\n    color: red[500], position: 'absolute', top: '50%', left: '50%', margin: theme.spacing(1),\r\n    display: 'flex', alignItems: 'center'\r\n  }\r\n\r\n}));\r\n// end css\r\n\r\nfunction Loading({loading}) {\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {loading && <Backdrop className={classes.backdrop} open={loading}>\r\n          <CircularProgress size={40} className={classes.buttonProgress} />\r\n          </Backdrop>\r\n        }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars({openSnackbar, severity, message, setOpenSnackbar}) {\r\n  const classes = useStyles();\r\n\r\n\r\n  const handleClose = (reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={openSnackbar} autoHideDuration={2000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={severity}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// import css\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n// icons\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: { flexGrow: 1, borderRadius: 0 },\r\n    button: {\r\n        margin: 10, marginTop: 25, marginBottom: 30, textTransform: 'capitalize', backgroundColor: '#DB0011',\r\n        borderRadius: '0'\r\n    },\r\n    buttonOutlined: {\r\n        margin: 10, marginTop: 25, marginBottom: 30, textTransform: 'capitalize', color: '#DB0011',\r\n        borderRadius: '0'\r\n    },\r\n    alignItems: { textAlign: 'right' }\r\n\r\n}));\r\n// end css\r\n\r\nexport default function CenteredGrid({ saveData, resultRequest, resultStatus, resultMsg, firstOpen, setFirstOpen, secondOpen, setSecondOpen, printScreen }) {\r\n\r\n    // Entry params\r\n    let { option, origin } = useParams();\r\n\r\n    // State variables\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    // Funcion para configurar el mensaje de confirmación de \r\n    // acuerdo al valor del parametro option recibido\r\n    function Confirmation() {\r\n        if (option === 'ReimprimirDiferida') {\r\n            return <Typography gutterBottom>\r\n                ¿Está seguro que desea hacer una <strong variant=\"h5\" component=\"h2\">REIMPRESIÓN DIFERIDA</strong> de tarjeta de débito?\r\n            </Typography>;\r\n        } else if (option === 'ReimprimirTarjeta') {\r\n            return <Typography gutterBottom>\r\n                ¿Está seguro que desea hacer una <strong variant=\"h5\" component=\"h2\">REIMPRESIÓN</strong> de tarjeta de débito?\r\n            </Typography>;\r\n        } else if (option === 'BajaBanelco') {\r\n            return <Typography gutterBottom>\r\n                ¿Está seguro que desea <strong variant=\"h5\" component=\"h2\">DAR DE BAJA</strong> la tarjeta de débito?\r\n            </Typography>;\r\n        } else if (option === 'BlanqueoPin') {\r\n            return <Typography gutterBottom>\r\n                ¿Está seguro que desea <strong variant=\"h5\" component=\"h2\">BLANQUEAR EL PIN</strong> de la tarjeta de débito?\r\n            </Typography>;\r\n        } else if (option === 'CambioCierre' || option === 'CambioCierreTC' || option === 'CbioCierreCartera') {\r\n            return <Typography gutterBottom>\r\n                ¿Está seguro que desea <strong variant=\"h5\" component=\"h2\">CAMBIAR EL CIERRE DE CARTERA</strong> de la tarjeta de crédito?\r\n            </Typography>;\r\n        }\r\n    }\r\n\r\n    const handleCloseFirst = () => {\r\n        setFirstOpen(false);\r\n    };\r\n\r\n    const handleCloseSecond = () => {\r\n        setSecondOpen(false);\r\n    };\r\n\r\n    const retrySaveData = () => {\r\n        saveData(true);\r\n    };\r\n\r\n    // Style variables\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Dialog fullScreen={fullScreen} open={firstOpen} onClose={handleCloseFirst} aria-labelledby=\"responsive-dialog-title\">\r\n                <DialogTitle id=\"responsive-dialog-title\">{\"Confirmación\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Confirmation />\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n                        startIcon={<CheckIcon />} onClick={saveData}>Aceptar</Button>\r\n                    <Button onClick={handleCloseFirst} variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n                        startIcon={<CloseIcon />}>Cancelar</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog fullScreen={fullScreen} open={secondOpen} onClose={handleCloseSecond} aria-labelledby=\"responsive-dialog-title\">\r\n                <DialogTitle id=\"responsive-dialog-title\">{\"Registración\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography gutterBottom>\r\n                            Se ha generado el pedido: <strong>{resultRequest}</strong> con estado <u><strong>{resultStatus}</strong></u>\r\n                        </Typography>\r\n                        <Typography gutterBottom>\r\n                            {resultMsg}\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n                        startIcon={<PrintIcon />} onClick={printScreen}>Imprimir</Button>\r\n                    <Button onClick={retrySaveData} variant=\"outlined\" color=\"secondary\" size=\"large\" className={classes.buttonOutlined}\r\n                        startIcon={<AutorenewIcon />} style={{ display: (origin === 'BANCA' && resultStatus !== 'Resuelto') ? 'inherit' : 'none' }}>Reintentar</Button>\r\n                    <Button onClick={handleCloseSecond} variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n                        startIcon={<CloseIcon />}>Cerrar</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import UtilsService from \"./utilsService\";\r\n\r\nconst ReprintService = {\r\n\r\n    getEmbozos(operationId, code) {\r\n        return UtilsService._call_get(UtilsService.URL() + '/reimpresion/tarjetas/embozos?operationId=' + operationId + '&codigo=' + code);\r\n    },\r\n\r\n    getCardDetails(operationId, cardNumber) {\r\n        return UtilsService._call_get(UtilsService.URL() + '/reimpresion/tarjetas/detalle?operationId=' + operationId + '&numero=' + cardNumber);\r\n    },\r\n\r\n    getBranchDetails(operationId) {\r\n        return UtilsService._call_get(UtilsService.URL() + '/transaccional/sucursales?operationId=' + operationId);\r\n    }\r\n\r\n}\r\n\r\nexport default ReprintService;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NavbarModule from '../commonsModule/navbarModule';\r\nimport HelpModule from '../commonsModule/helpModule';\r\nimport ButtonsModule from '../commonsModule/buttonsModule';\r\nimport LoadingModule from '../commonsModule/loadingModule';\r\nimport SnackbarModule from '../commonsModule/snackbarModule';\r\nimport DialogsModule from '../commonsModule/dialogsModule';\r\n\r\n// import css\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MuiAccordion from \"@material-ui/core/Accordion\";\r\nimport MuiAccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n// services\r\nimport BaseService from '../services/baseService';\r\nimport UtilsService from \"../services/utilsService\";\r\nimport ReprintService from '../services/reprintService';\r\n\r\n// start css\r\nconst useStyles = makeStyles(() => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  pos: { marginBottom: 12, },\r\n  divider: { marginTop: 25, marginBottom: 25 },\r\n  formControl: { width: '95%' },\r\n\r\n}));\r\n\r\nconst Accordion = withStyles({\r\n  root: {\r\n    boxShadow: \"none\",\r\n    \"&:not(:last-child)\": { borderBottom: 0 },\r\n    \"&:before\": { display: \"none\" },\r\n    \"&$expanded\": { margin: \"auto\" },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordion);\r\n\r\nconst AccordionSummary = withStyles({\r\n  root: {\r\n    marginBottom: -1, minHeight: 56,\r\n    \"&$expanded\": { minHeight: 56 },\r\n  },\r\n  content: {\r\n    \"&$expanded\": { margin: \"12px 0\" },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordionSummary);\r\n\r\nconst AccordionDetails = withStyles((theme) => ({\r\n  root: { padding: theme.spacing(2) },\r\n}))(MuiAccordionDetails);\r\n// end css\r\n\r\nexport default function ReprintFunc() {\r\n\r\n  // Entry params\r\n  let { operationId, option, documentType, documentNumber, businessName, contactModeCode, productCode, causeCode,\r\n    reasonCode, companyCode, responsibleSector, registerSector, user, origin,\r\n    initContact, closeContact, productNumber } = useParams();\r\n\r\n  // State variables\r\n  const [embozos, setEmbozos] = React.useState([]);\r\n  const [sucursales, setSucursales] = React.useState([]);\r\n  const [disable, setDisable] = React.useState(true);\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [expanded, setExpanded] = React.useState(\"\");\r\n  const [selectedDestino, setSelectedDestino] = React.useState('');\r\n  const [selectedSucursal, setSelectedSucursal] = React.useState('');\r\n  const [firstOpen, setFirstOpen] = React.useState(false);\r\n  const [secondOpen, setSecondOpen] = React.useState(false);\r\n  const [resultRequest, setResultRequest] = React.useState(\"\");\r\n  const [resultStatus, setResultStatus] = React.useState(\"\");\r\n  const [resultMsg, setResultMsg] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [showDomicilio, setShowDomicilio] = React.useState(false);\r\n  const [showSucursal, setShowSucursal] = React.useState(false);\r\n  const [showExterior, setShowExterior] = React.useState(false);\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n  const [severity, setSeverity] = React.useState('');\r\n  const [message, setMessage] = React.useState('');\r\n\r\n  // Ref variables\r\n  let domicilioEmbozo = React.useRef(null);\r\n  let domicilioCategoria = React.useRef(null);\r\n  let sucursalEmbozo = React.useRef(null);\r\n  let sucursalCategoria = React.useRef(null);\r\n  let exteriorEmbozo = React.useRef(null);\r\n  let exteriorCategoria = React.useRef(null);\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  // Get branches info\r\n  const updateBranches = () => {\r\n    ReprintService.getBranchDetails(operationId)\r\n      .then(dataSucursales => {\r\n        setSucursales(dataSucursales.branches);\r\n        setLoading(false);\r\n      })\r\n  }\r\n\r\n  // Handle onchange event (Sucursal)\r\n  const updateSelectedSucursal = (event, data) => {\r\n    setSelectedSucursal(data.props.label + \" (\" + data.props.value + \")\");\r\n  }\r\n\r\n  // Handle onchange event (Paneles)\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    if (panel === 'panelSucursal') { // Panel de Sucursal\r\n      setLoading(true);\r\n      updateBranches();\r\n      setSelectedDestino('SUCURSAL');\r\n      setDisable(true);\r\n    } else { // Panel de Domicilio\r\n      setSelectedSucursal(\"-\");\r\n      setSelectedDestino(panel === 'panelDomicilio' ? 'DOMICILIO' : 'EXTERIOR');\r\n    }\r\n    setExpanded(newExpanded ? panel : false);\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  // Funcion para guardar la registracion generada\r\n  const saveData = (retry) => {\r\n    setFirstOpen(false);\r\n\r\n    let embozo = selectedDestino === 'DOMICILIO' ? domicilioEmbozo.current.outerText : sucursalEmbozo.current.outerText;\r\n    let category = selectedDestino === 'DOMICILIO' ? domicilioCategoria.current.outerText : sucursalCategoria.current.outerText;\r\n\r\n    if (embozo === 'SIN DATOS') {\r\n      setSeverity(\"error\")\r\n      setMessage(\"EMBOZO SIN VALOR\")\r\n      setOpenSnackbar(true)\r\n      return\r\n    }\r\n\r\n    if (category === 'SIN DATOS') {\r\n      setSeverity(\"error\")\r\n      setMessage(\"CATEGORÍA SIN VALOR\")\r\n      setOpenSnackbar(true)\r\n      return\r\n    }\r\n\r\n    setDisable(true);\r\n    setLoading(true);\r\n\r\n    let commonParams = UtilsService.getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, retry ? resultRequest : null);\r\n\r\n    let reprintTdParams = _getReprintTdParams(embozo, category, \"-\", selectedSucursal);\r\n\r\n    let transactionalRequest = {}\r\n    transactionalRequest.commonParams = commonParams;\r\n    transactionalRequest.reprintTdParams = reprintTdParams;\r\n\r\n    BaseService.saveData(transactionalRequest)\r\n      .then(data => {\r\n        let pedido = data.registration.requestNumber;\r\n        let mensaje = data.registration.message;\r\n        let estado = data.registration.status;\r\n        setSecondOpen(true);\r\n        setResultRequest(pedido);\r\n        setResultStatus(estado);\r\n        setResultMsg(mensaje);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const getConfirmation = () => {\r\n    setFirstOpen(true);\r\n  }\r\n\r\n  // Funcion hook para consultar los detalles de la tarjeta y los embozos\r\n  React.useEffect(() => {\r\n    async function callAPI() {\r\n      ReprintService.getCardDetails(operationId, productNumber)\r\n        .then(data => {\r\n          ReprintService.getEmbozos(operationId, data.detalleTarjeta.reprint)\r\n            .then(dataEmbozos => {\r\n              setEmbozos(dataEmbozos.embozos);\r\n              setLoading(false);\r\n              dataEmbozos.embozos.map(embozo => {\r\n                if (embozo.destino === 'Domicilio') {\r\n                  setShowDomicilio(true);\r\n                }\r\n                if (embozo.destino === 'Sucursal') {\r\n                  setShowSucursal(true);\r\n                }\r\n                if (embozo.destino === 'Exterior') {\r\n                  setShowExterior(true);\r\n                }\r\n              })\r\n            });\r\n        })\r\n    }\r\n    callAPI();\r\n  }, [operationId, productNumber, setShowDomicilio, setShowSucursal, setShowExterior]);\r\n\r\n  const printScreen = () => {\r\n    let embozo = selectedDestino === 'DOMICILIO' ? domicilioEmbozo.current.outerText : sucursalEmbozo.current.outerText;\r\n    let category = selectedDestino === 'DOMICILIO' ? domicilioCategoria.current.outerText : sucursalCategoria.current.outerText;\r\n\r\n    setLoading(true);\r\n\r\n    let commonParams = UtilsService.getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, resultRequest);\r\n\r\n    let reprintTdParams = _getReprintTdParams(embozo, category, \"-\", selectedSucursal);\r\n\r\n    let transactionalRequest = {}\r\n    transactionalRequest.commonParams = commonParams;\r\n    transactionalRequest.reprintTdParams = reprintTdParams;\r\n\r\n    BaseService.printData(transactionalRequest)\r\n      .then(data => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const _getReprintTdParams = (embozo, category, domicilio, sucursal) => {\r\n\r\n    let reprintTdParams = {};\r\n    reprintTdParams.embozo = embozo;\r\n    reprintTdParams.category = category;\r\n    reprintTdParams.domicilio = domicilio;\r\n    reprintTdParams.sucursal = sucursal;\r\n    return reprintTdParams;\r\n\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* start navbar */}\r\n      <NavbarModule></NavbarModule>\r\n      {/* end navbar */}\r\n\r\n      {/* start snackbar */}\r\n      <SnackbarModule openSnackbar={openSnackbar} severity={severity} message={message} setOpenSnackbar={setOpenSnackbar}></SnackbarModule>\r\n      {/* end snackbar */}\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={12}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Cliente\r\n                </Typography>\r\n                <br></br>\r\n                <Grid container spacing={3}>\r\n                  <Grid item lg={5}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Apellido y Nombre\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {businessName}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item lg={2}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo y Nº de Documento\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {documentType} - {documentNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={2}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Nº Banelco\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {productNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={2}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo Tarjeta\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      P.TIT.ELECTRON\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Destino\r\n                </Typography>\r\n                <br></br>\r\n                <div>\r\n                  <Accordion square expanded={expanded === \"panelDomicilio\"} key='acc-domicilio' style={{ display: showDomicilio ? 'inherit' : 'none' }}>\r\n                    <AccordionSummary aria-controls=\"panelDomiciliod-content\" id=\"panelDomiciliod-header\">\r\n                      <FormControl component=\"fieldset\">\r\n                        <RadioGroup aria-label=\"destino\" name=\"domicilio\" value={value} onChange={handleChange(\"panelDomicilio\")}\r\n                          onClick={() => setDisable(false)}>\r\n                          <FormControlLabel value=\"panelDomicilio\" control={<Radio />} label=\"Domicilio\" />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Domicilio\r\n                          </Typography>\r\n                          <Typography className={classes.pos} color=\"textSecondary\">\r\n\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Embozo\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Domicilio').map(fEmbozo => (\r\n                              <Typography key=\"domicilioEmbozo\" ref={domicilioEmbozo} className={classes.pos} color=\"textSecondary\">\r\n                                {fEmbozo.embozo}\r\n                              </Typography>))\r\n                          }\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Categoría\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Domicilio').map(fEmbozo => (\r\n                              <Typography key=\"domicilioCategoria\" ref={domicilioCategoria} className={classes.pos} color=\"textSecondary\">{fEmbozo.categoria}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                  <Accordion square expanded={expanded === \"panelSucursal\"} key='acc-sucursal' style={{ display: showSucursal ? 'inherit' : 'none' }}>\r\n                    <AccordionSummary aria-controls=\"panelSucursald-content\" id=\"panelSucursald-header\">\r\n                      <FormControl component=\"fieldset\">\r\n                        <RadioGroup aria-label=\"destino\" name=\"sucursal\" value={value} onChange={handleChange(\"panelSucursal\")}>\r\n                          <FormControlLabel value=\"panelSucursal\" control={<Radio />} label=\"Sucursal\" />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item lg={2} xs={6}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Sucursal\r\n                          </Typography>\r\n                          <FormControl className={classes.formControl}>\r\n                            <Select onChange={updateSelectedSucursal}>\r\n                              {sucursales.map((sucursal) =>\r\n                                <MenuItem onClick={() => setDisable(false)} value={sucursal.numBranch} label={sucursal.branch}>{sucursal.branch}</MenuItem>)}\r\n                            </Select>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Embozo\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Sucursal').map(fEmbozo => (\r\n                              <Typography key=\"sucursalEmbozo\" ref={sucursalEmbozo} className={classes.pos} color=\"textSecondary\">{fEmbozo.embozo}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Categoría\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Sucursal').map(fEmbozo => (\r\n                              <Typography key=\"sucursalCategoria\" ref={sucursalCategoria} className={classes.pos} color=\"textSecondary\">{fEmbozo.categoria}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                  <Accordion square expanded={expanded === \"panelExterior\"} key='acc-exterior' style={{ display: showExterior ? 'inherit' : 'none' }}>\r\n                    <AccordionSummary aria-controls=\"panelExteriord-content\" id=\"panelExteriord-header\">\r\n                      <FormControl component=\"fieldset\">\r\n                        <RadioGroup aria-label=\"destino\" name=\"exterior\" value={value} onChange={handleChange(\"panelExterior\")}\r\n                          onClick={() => setDisable(false)}>\r\n                          <FormControlLabel value=\"panelExterior\" control={<Radio />} label=\"Exterior\" />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Exterior\r\n                          </Typography>\r\n                          <Typography className={classes.pos} color=\"textSecondary\">\r\n\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Embozo\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Exterior').map(fEmbozo => (\r\n                              <Typography key=\"exteriorEmbozo\" ref={exteriorEmbozo} className={classes.pos} color=\"textSecondary\">{fEmbozo.embozo}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Categoría\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Exterior').map(fEmbozo => (\r\n                              <Typography key=\"exteriorCategoria\" ref={exteriorCategoria} className={classes.pos} color=\"textSecondary\">{fEmbozo.categoria}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                </div>\r\n                <br></br>\r\n                <HelpModule />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Start Loading Module */}\r\n        <LoadingModule loading={loading}></LoadingModule>\r\n        {/* End Loading Module */}\r\n\r\n        {/* Start Dialog */}\r\n        <DialogsModule saveData={saveData} resultRequest={resultRequest} resultStatus={resultStatus}\r\n          resultMsg={resultMsg} firstOpen={firstOpen} setFirstOpen={setFirstOpen} printScreen={printScreen}\r\n          secondOpen={secondOpen} setSecondOpen={setSecondOpen}></DialogsModule>\r\n        {/* End Dialog */}\r\n\r\n       {/* Start Buttons Module */}\r\n        <ButtonsModule disable={disable} getConfirmation={getConfirmation} valueButton={\"Guardar\"}></ButtonsModule>\r\n        {/* End Buttons Module */}\r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NavbarModule from '../commonsModule/navbarModule';\r\nimport DialogsModule from '../commonsModule/dialogsModule';\r\nimport ButtonsModule from '../commonsModule/buttonsModule';\r\nimport LoadingModule from '../commonsModule/loadingModule';\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// services\r\nimport BaseService from '../services/baseService';\r\nimport UtilsService from \"../services/utilsService\";\r\n\r\n// start css\r\nconst useStyles = makeStyles(() => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  pos: { marginBottom: 12, },\r\n  divider: { marginTop: 25, marginBottom: 25 },\r\n  formControl: { width: '95%' },\r\n\r\n}));\r\n// end css\r\n\r\nexport default function DischargeFunc() {\r\n\r\n  // Entry params\r\n  let { operationId, option, documentType, documentNumber, businessName, contactModeCode, productCode, causeCode,\r\n    reasonCode, companyCode, responsibleSector, registerSector, user, origin,\r\n    initContact, closeContact, productNumber } = useParams();\r\n\r\n  // State variables\r\n  const [disable, setDisable] = React.useState(false);\r\n  const [firstOpen, setFirstOpen] = React.useState(false);\r\n  const [secondOpen, setSecondOpen] = React.useState(false);\r\n  const [resultRequest, setResultRequest] = React.useState(\"\");\r\n  const [resultStatus, setResultStatus] = React.useState(\"\");\r\n  const [resultMsg, setResultMsg] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  // Funcion para guardar la registracion generada\r\n  const saveData = (retry) => {\r\n    setFirstOpen(false);\r\n    setDisable(true);\r\n    setLoading(true);\r\n\r\n    let commonParams = UtilsService.getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, retry ? resultRequest : null);\r\n\r\n    let transactionalRequest = {}\r\n    transactionalRequest.commonParams = commonParams;\r\n\r\n    BaseService.saveData(transactionalRequest)\r\n      .then(data => {\r\n        let pedido = data.registration.requestNumber;\r\n        let mensaje = data.registration.message;\r\n        let estado = data.registration.status;\r\n        setSecondOpen(true);\r\n        setResultRequest(pedido);\r\n        setResultStatus(estado);\r\n        setResultMsg(mensaje);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const getConfirmation = () => {\r\n    setFirstOpen(true);\r\n  }\r\n\r\n  const printData = () => {\r\n    setLoading(true);\r\n\r\n    let commonParams = UtilsService.getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, resultRequest);\r\n\r\n    let transactionalRequest = {}\r\n    transactionalRequest.commonParams = commonParams;\r\n\r\n    BaseService.printData(transactionalRequest)\r\n      .then(data => {\r\n        console.log(data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* Start Navbar Module */}\r\n      <NavbarModule />\r\n      {/* End Navbar Module */}\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={12}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Cliente\r\n                </Typography>\r\n                <br></br>\r\n                <Grid container spacing={6}>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Apellido y Nombre\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {businessName}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo y Nº de Documento\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {documentType} - {documentNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n                <Grid container spacing={6}>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Nº Banelco\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {productNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo Tarjeta\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      P.TIT.ELECTRON\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Start Loading Module */}\r\n        <LoadingModule loading={loading}></LoadingModule>\r\n        {/* End Loading Module */}\r\n\r\n        {/* Start Dialog */}\r\n        <DialogsModule saveData={saveData} resultRequest={resultRequest} resultStatus={resultStatus}\r\n          resultMsg={resultMsg} firstOpen={firstOpen} setFirstOpen={setFirstOpen} printScreen={printData}\r\n          secondOpen={secondOpen} setSecondOpen={setSecondOpen}></DialogsModule>\r\n        {/* End Dialog */}\r\n\r\n        {/* Start Buttons Module */}\r\n        <ButtonsModule disable={disable} getConfirmation={getConfirmation} valueButton={\"Guardar\"}></ButtonsModule>\r\n        {/* End Buttons Module */}\r\n      </Container>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NavbarModule from '../commonsModule/navbarModule';\r\nimport DialogsModule from '../commonsModule/dialogsModule';\r\nimport ButtonsModule from '../commonsModule/buttonsModule';\r\nimport LoadingModule from '../commonsModule/loadingModule';\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// services\r\nimport BaseService from '../services/baseService';\r\nimport UtilsService from \"../services/utilsService\";\r\n\r\n// start css\r\nconst useStyles = makeStyles(() => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  pos: { marginBottom: 12, },\r\n  divider: { marginTop: 25, marginBottom: 25 },\r\n  formControl: { width: '95%' },\r\n\r\n}));\r\n// end css\r\n\r\nexport default function DischargeFunc() {\r\n\r\n  // Entry params\r\n  let { operationId, option, documentType, documentNumber, businessName, contactModeCode, productCode, causeCode,\r\n    reasonCode, companyCode, responsibleSector, registerSector, user, origin,\r\n    initContact, closeContact, productNumber } = useParams();\r\n\r\n  // State variables\r\n  const [disable, setDisable] = React.useState(false);\r\n  const [firstOpen, setFirstOpen] = React.useState(false);\r\n  const [secondOpen, setSecondOpen] = React.useState(false);\r\n  const [resultRequest, setResultRequest] = React.useState(\"\");\r\n  const [resultStatus, setResultStatus] = React.useState(\"\");\r\n  const [resultMsg, setResultMsg] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  // Funcion para guardar la registracion generada\r\n  const saveData = (retry) => {\r\n    setFirstOpen(false);\r\n    setDisable(true);\r\n    setLoading(true);\r\n\r\n    let commonParams = UtilsService.getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, retry ? resultRequest : null);\r\n\r\n    let transactionalRequest = {}\r\n    transactionalRequest.commonParams = commonParams;\r\n\r\n    BaseService.saveData(transactionalRequest)\r\n      .then(data => {\r\n        let pedido = data.registration.requestNumber;\r\n        let mensaje = data.registration.message;\r\n        let estado = data.registration.status;\r\n        setSecondOpen(true);\r\n        setResultRequest(pedido);\r\n        setResultStatus(estado);\r\n        setResultMsg(mensaje);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const getConfirmation = () => {\r\n    setFirstOpen(true);\r\n  }\r\n\r\n  const printData = () => {\r\n    setLoading(true);\r\n\r\n    BaseService.printData(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, \"\",\r\n      \"\", \"\", \"\", resultRequest)\r\n      .then(data => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* Start Navbar Module */}\r\n      <NavbarModule />\r\n      {/* End Navbar Module */}\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={12}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Cliente\r\n                </Typography>\r\n                <br></br>\r\n                <Grid container spacing={6}>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Apellido y Nombre\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {businessName}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo y Nº de Documento\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {documentType} - {documentNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n                <Grid container spacing={6}>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Nº Banelco\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {productNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo Tarjeta\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      P.TIT.ELECTRON\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Start Loading Module */}\r\n        <LoadingModule loading={loading}></LoadingModule>\r\n        {/* End Loading Module */}\r\n\r\n        {/* Start Dialog */}\r\n        <DialogsModule saveData={saveData} resultRequest={resultRequest} resultStatus={resultStatus}\r\n          resultMsg={resultMsg} firstOpen={firstOpen} setFirstOpen={setFirstOpen} printScreen={printData}\r\n          secondOpen={secondOpen} setSecondOpen={setSecondOpen}></DialogsModule>\r\n        {/* End Dialog */}\r\n\r\n        {/* Start Buttons Module */}\r\n        <ButtonsModule disable={disable} getConfirmation={getConfirmation} valueButton={\"Blanquear PIN\"}></ButtonsModule>\r\n        {/* End Buttons Module */}\r\n      </Container>\r\n    </div>\r\n  );\r\n}","import UtilsService from \"./utilsService\";\r\n\r\nconst CloseChangeService = {\r\n\r\n    getTarjetas(operationId, docType, docNum) {\r\n        return UtilsService._call_get(UtilsService.URL() + '/cambioCierre/tarjetas?operationId=' + operationId + '&docType=' + docType + '&docNum=' + docNum);\r\n    }\r\n\r\n}\r\n\r\nexport default CloseChangeService;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NavbarModule from '../commonsModule/navbarModule';\r\nimport DialogsModule from '../commonsModule/dialogsModule';\r\nimport ButtonsModule from '../commonsModule/buttonsModule';\r\nimport LoadingModule from '../commonsModule/loadingModule';\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n// services\r\nimport BaseService from '../services/baseService';\r\nimport CloseChangeService from \"../services/closeChangeService\";\r\nimport UtilsService from \"../services/utilsService\";\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  pos: { marginBottom: 12, },\r\n  divider: { marginTop: 25, marginBottom: 25 },\r\n  formControl: { width: '95%' },\r\n  formControl2: { margin: theme.spacing(1), minWidth: 120 },\r\n  selectEmpty: { marginTop: theme.spacing(2) },\r\n\r\n}));\r\nconst tabla = makeStyles(() => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n// end css\r\n\r\nexport default function CloseChangeFunc() {\r\n\r\n  // Entry params\r\n  let { operationId, option, documentType, documentNumber, businessName, contactModeCode, productCode, causeCode,\r\n    reasonCode, companyCode, responsibleSector, registerSector, user, origin,\r\n    initContact, closeContact, productNumber } = useParams();\r\n\r\n  // State variables\r\n  const [disable, setDisable] = React.useState(true);\r\n  const [firstOpen, setFirstOpen] = React.useState(false);\r\n  const [secondOpen, setSecondOpen] = React.useState(false);\r\n  const [resultRequest, setResultRequest] = React.useState(\"\");\r\n  const [resultStatus, setResultStatus] = React.useState(\"\");\r\n  const [resultMsg, setResultMsg] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [cartera, setCartera] = React.useState(\"\");\r\n  const [rows, setRows] = React.useState([]);\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n  const classTable = tabla();\r\n\r\n  // Funcion para guardar la registracion generada\r\n  const saveData = (retry) => {\r\n    setFirstOpen(false);\r\n    setDisable(true);\r\n    setLoading(true);\r\n\r\n    let commonsParams = UtilsService.getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, retry ? resultRequest : null);\r\n\r\n    let closeChangeParams = _getCloseChangeParams(rows[0]);\r\n\r\n    let transactionalRequest = {}\r\n    transactionalRequest.commonParams = commonsParams;\r\n    transactionalRequest.closeChangeParams = closeChangeParams;\r\n\r\n    BaseService.saveData(transactionalRequest)\r\n      .then(data => {\r\n        let pedido = data.registration.requestNumber;\r\n        let mensaje = data.registration.message;\r\n        let estado = data.registration.status;\r\n        setSecondOpen(true);\r\n        setResultRequest(pedido);\r\n        setResultStatus(estado);\r\n        setResultMsg(mensaje);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const getConfirmation = () => {\r\n    setFirstOpen(true);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    async function callAPI() {\r\n      CloseChangeService.getTarjetas(operationId, documentType, documentNumber)\r\n        .then(data => {\r\n          setRows(data.cardAccArr);\r\n          setLoading(false);\r\n        })\r\n    }\r\n    callAPI();\r\n  }, [operationId, documentType, documentNumber]);\r\n\r\n  const printData = () => {\r\n    setLoading(true);\r\n\r\n    let commonsParams = UtilsService.getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, resultRequest);\r\n\r\n    let closeChangeParams = _getCloseChangeParams(rows[0]);\r\n\r\n    let transactionalRequest = {}\r\n    transactionalRequest.commonParams = commonsParams;\r\n    transactionalRequest.closeChangeParams = closeChangeParams;\r\n\r\n    BaseService.printData(transactionalRequest)\r\n      .then(data => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const _getCloseChangeParams = (row) => {\r\n    let closeChangeParams = {};\r\n    closeChangeParams.tipoCliente = \"Titular\";\r\n    closeChangeParams.apellidoNombre = row.cardhName;\r\n    closeChangeParams.nroTarjeta = row.cardNum;\r\n    closeChangeParams.estado = row.primAcctInfo.statDesc;\r\n    closeChangeParams.cartera = cartera;\r\n    return closeChangeParams;\r\n  }\r\n\r\n  const handleChange = (event, data) => {\r\n    setCartera(data.props.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* Start Navbar Module */}\r\n      <NavbarModule />\r\n      {/* End Navbar Module */}\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={12}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Cliente\r\n                </Typography>\r\n                <br></br>\r\n                <Grid container spacing={6}>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Apellido y Nombre\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {businessName}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo y Nº de Documento\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {documentType} - {documentNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n                <Grid container spacing={6}>\r\n                  <TableContainer component={Paper}>\r\n                    <Table className={classTable.table} size=\"small\" aria-label=\"a dense table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell align=\"left\">Tipo</TableCell>\r\n                          <TableCell align=\"left\">Tipo Doc.</TableCell>\r\n                          <TableCell align=\"left\">Numero Doc.</TableCell>\r\n                          <TableCell align=\"left\">Apellido y Nombre</TableCell>\r\n                          <TableCell align=\"left\">Numero</TableCell>\r\n                          <TableCell align=\"left\">Estado</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {rows.map((row) =>\r\n                          <TableRow key={row.cardNum}>\r\n                            <TableCell component=\"th\" scope=\"row\">{'Titular'}</TableCell>\r\n                            <TableCell align=\"left\">{row.typeIdfcCde}</TableCell>\r\n                            <TableCell align=\"left\">{row.idfcNum}</TableCell>\r\n                            <TableCell align=\"left\">{row.cardhName}</TableCell>\r\n                            <TableCell align=\"left\">{row.cardNum}</TableCell>\r\n                            <TableCell align=\"left\">{row.primAcctInfo.statDesc}</TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Grid>\r\n\r\n                <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n                <Grid container spacing={6}>\r\n                  <Grid item lg={2} xs={6}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Cartera\r\n                    </Typography>\r\n                    <FormControl className={classes.formControl}>\r\n                      <Select onChange={handleChange} value={cartera}>\r\n                        <MenuItem value={\"01\"} onClick={() => setDisable(false)}>Cartera 1</MenuItem>\r\n                        <MenuItem value={\"02\"} onClick={() => setDisable(false)}>Cartera 2</MenuItem>\r\n                        <MenuItem value={\"03\"} onClick={() => setDisable(false)}>Cartera 3</MenuItem>\r\n                        <MenuItem value={\"04\"} onClick={() => setDisable(false)}>Cartera 4</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Start Loading Module */}\r\n        <LoadingModule loading={loading}></LoadingModule>\r\n        {/* End Loading Module */}\r\n\r\n        {/* Start Dialog */}\r\n        <DialogsModule saveData={saveData} resultRequest={resultRequest} resultStatus={resultStatus}\r\n          resultMsg={resultMsg} firstOpen={firstOpen} setFirstOpen={setFirstOpen} printScreen={printData}\r\n          secondOpen={secondOpen} setSecondOpen={setSecondOpen}></DialogsModule>\r\n        {/* End Dialog */}\r\n\r\n        {/* Start Buttons Module */}\r\n        <ButtonsModule disable={disable} getConfirmation={getConfirmation} valueButton={\"Guardar\"}></ButtonsModule>\r\n        {/* End Buttons Module */}\r\n      </Container>\r\n    </div>\r\n\r\n  );\r\n\r\n}","/* eslint-disable no-template-curly-in-string */\r\nimport React from 'react';\r\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\nimport ReprintModule from './components/reprintModule/reprintModule';\r\nimport DischargeModule from './components/dischargeModule/dischargeModule';\r\nimport ResetPinModule from './components/resetPinModule/resetPinModule';\r\nimport CloseChangeModule from './components/closeChangeModule/closeChangeModule';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router basename={'/sactran'}>\r\n      <div>\r\n        <Switch>\r\n          <Route path={`${process.env.PUBLIC_URL}/reprint/:operationId/:option/:documentType/:documentNumber/:businessName/:contactModeCode/:productCode/:causeCode/:reasonCode/:companyCode/:responsibleSector/:registerSector/:user/:origin/:initContact/:closeContact/:productNumber`} component={Reprint} />\r\n          <Route path={`${process.env.PUBLIC_URL}/discharge/:operationId/:option/:documentType/:documentNumber/:businessName/:contactModeCode/:productCode/:causeCode/:reasonCode/:companyCode/:responsibleSector/:registerSector/:user/:origin/:initContact/:closeContact/:productNumber`} component={Discharge} />\r\n          <Route path={`${process.env.PUBLIC_URL}/resetPin/:operationId/:option/:documentType/:documentNumber/:businessName/:contactModeCode/:productCode/:causeCode/:reasonCode/:companyCode/:responsibleSector/:registerSector/:user/:origin/:initContact/:closeContact/:productNumber`} component={ResetPin} />\r\n          <Route path={`${process.env.PUBLIC_URL}/closeChange/:operationId/:option/:documentType/:documentNumber/:businessName/:contactModeCode/:productCode/:causeCode/:reasonCode/:companyCode/:responsibleSector/:registerSector/:user/:origin/:initContact/:closeContact/:productNumber`} component={CloseChange} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App\r\n\r\nfunction Reprint() {\r\n  return <ReprintModule></ReprintModule>;\r\n}\r\n\r\nfunction Discharge() {\r\n  return <DischargeModule></DischargeModule>;\r\n}\r\n\r\nfunction ResetPin() {\r\n  return <ResetPinModule></ResetPinModule>;\r\n}\r\n\r\nfunction CloseChange() {\r\n  return <CloseChangeModule></CloseChangeModule>;\r\n}","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App></App>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}