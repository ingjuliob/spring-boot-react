{"version":3,"sources":["reportWebVitals.js","img/logo.svg","components/commonsModule/navbarModule.js","components/services/baseService.js","components/commonsModule/helpModule.js","components/commonsModule/buttonsModule.js","components/commonsModule/loadingModule.js","components/commonsModule/snackbarModule.js","components/commonsModule/dialogsModule.js","components/services/reprintService.js","components/reprintModule/reprintModule.js","components/dischargeModule/dischargeModule.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","root","flexGrow","borderRadius","appbar","background","paddingTop","paddingBottom","marginBottom","color","navbarTitle","textAlign","fontStyle","CenteredGrid","option","useParams","React","useState","tipo","setTipo","classes","useEffect","className","AppBar","position","Container","maxWidth","Toolbar","src","logo","alt","Typography","variant","BaseService","URL","_call_get","url","fetch","res","json","catch","err","console","log","_call_post","body","method","headers","JSON","stringify","_call_post_test","filename","requestNumber","response","blob","href","window","createObjectURL","link","document","createElement","setAttribute","appendChild","click","getHelp","operationId","productCode","causeCode","reasonCode","companyCode","this","saveData","documentType","documentNumber","productNumber","origin","user","contactMode","reasoncode","responsibleSector","registerSector","initContact","closeContact","embozo","category","domicilio","sucursal","printData","helpText","setHelpText","a","dataHelp","message","callAPI","Alert","severity","AlertTitle","button","margin","marginTop","textTransform","backgroundColor","buttonOutlined","alignItems","getConfirmation","disable","Button","size","disabled","startIcon","onClick","backdrop","zIndex","drawer","buttonProgress","red","top","left","spacing","display","Loading","loading","Backdrop","open","CircularProgress","props","elevation","width","CustomizedSnackbars","openSnackbar","setOpenSnackbar","handleClose","reason","Snackbar","autoHideDuration","onClose","resultRequest","resultStatus","resultMsg","firstOpen","setFirstOpen","secondOpen","setSecondOpen","printScreen","useTheme","fullScreen","useMediaQuery","breakpoints","down","Confirmation","gutterBottom","component","handleCloseFirst","handleCloseSecond","Dialog","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","style","ReprintService","getEmbozos","code","getCardDetails","cardNumber","getBranchDetails","pos","divider","formControl","Accordion","withStyles","boxShadow","borderBottom","expanded","MuiAccordion","AccordionSummary","minHeight","content","MuiAccordionSummary","AccordionDetails","padding","MuiAccordionDetails","ReprintFunc","businessName","contactModeCode","embozos","setEmbozos","sucursales","setSucursales","setDisable","value","setValue","setExpanded","selectedDestino","setSelectedDestino","selectedSucursal","setSelectedSucursal","setResultRequest","setResultStatus","setResultMsg","setLoading","showDomicilio","setShowDomicilio","showSucursal","setShowSucursal","showExterior","setShowExterior","setSeverity","setMessage","domicilioEmbozo","useRef","domicilioCategoria","sucursalEmbozo","sucursalCategoria","exteriorEmbozo","exteriorCategoria","handleChange","panel","event","newExpanded","dataSucursales","branches","target","data","detalleTarjeta","reprint","dataEmbozos","map","destino","Grid","container","item","lg","Card","CardContent","Divider","square","aria-controls","FormControl","RadioGroup","aria-label","name","onChange","FormControlLabel","control","Radio","label","filter","fEmbozo","ref","categoria","xs","Select","MenuItem","numBranch","branch","current","outerText","pedido","registration","mensaje","estado","status","DischargeFunc","App","to","path","Reprint","Discharge","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.abded1d3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/logo.a1dd3a73.svg\";","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport logo from '../../img/logo.svg';\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  appbar: { background: 'white', paddingTop: 10, paddingBottom: 10, marginBottom: 25, color: 'black' },\r\n  navbarTitle: { flexGrow: 1, textAlign: 'right', fontStyle: 'uppercase' }\r\n\r\n}));\r\n// end css\r\n\r\nexport default function CenteredGrid() {\r\n\r\n  // Entry params\r\n  let { option } = useParams();\r\n\r\n  // State variables\r\n  const [tipo, setTipo] = React.useState(\"\");\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  // Funcion hook para configurar el nombre de la transaccional de \r\n  // acuerdo al valor del parametro option recibido\r\n  React.useEffect(() => {\r\n    if (option === 'ReimprimirDiferida') {\r\n      setTipo(\"Reimpresión Diferida de Tarjeta Banelco\");\r\n    } else if (option === 'ReimprimirTarjeta') {\r\n      setTipo(\"Reimpresión Común de Tarjeta Banelco\");\r\n    } else if (option === 'BajaBanelco') {\r\n      setTipo(\"Baja de Tarjeta Banelco\");\r\n    }\r\n  }, [option]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appbar}>\r\n        <Container maxWidth=\"lg\">\r\n          <Toolbar>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <Typography variant=\"h6\" className={classes.navbarTitle}>\r\n              {tipo}\r\n            </Typography>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","const BaseService = {\r\n\r\n    URL() {\r\n        return 'http://localhost:8080';\r\n    },\r\n\r\n    _call_get(url) {\r\n        return fetch(url)\r\n            .then(res => res.json())\r\n            .catch(err => console.log(err))\r\n    },\r\n\r\n    _call_post(url, body) {\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then(res => res.json())\r\n            .catch(err => console.log(err))\r\n    },\r\n\r\n    _call_post_test(url, body) {\r\n        let filename = body.option + \"_\" + body.requestNumber + \".pdf\";\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then(function (response) {\r\n                return response.blob();\r\n            }).then(function (blob) {\r\n                const href = window.URL.createObjectURL(blob);\r\n                const link = document.createElement('a');\r\n                link.href = href;\r\n                link.setAttribute('download', filename);\r\n                document.body.appendChild(link);\r\n                link.click();\r\n            })\r\n            .catch(err => console.log(err))\r\n    },\r\n\r\n    getHelp(operationId, productCode, causeCode, reasonCode, companyCode) {\r\n        return this._call_get(this.URL() + '/transaccional/parametros/ayuda?operationId=' + operationId + '&productCode=' + productCode + '&causeCode=' + causeCode + '&reasonCode=' + reasonCode + '&companyCode=' + companyCode);\r\n    },\r\n\r\n    saveData(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n        user, option, contactMode, reasoncode, responsibleSector, registerSector, initContact, closeContact, embozo,\r\n        category, domicilio, sucursal) {\r\n\r\n        let body = {};\r\n        body.operationId = operationId;\r\n        body.documentType = documentType;\r\n        body.documentNumber = documentNumber;\r\n        body.productNumber = productNumber;\r\n        body.user = user;\r\n        body.origin = origin;\r\n        body.option = option;\r\n        body.contactMode = contactMode;\r\n        body.productCode = productCode;\r\n        body.causeCode = causeCode;\r\n        body.reasoncode = reasoncode;\r\n        body.companyCode = companyCode;\r\n        body.responsibleSector = responsibleSector;\r\n        body.registerSector = registerSector;\r\n        body.initContact = initContact;\r\n        body.closeContact = closeContact;\r\n        body.embozo = embozo;\r\n        body.category = category;\r\n        body.domicilio = domicilio;\r\n        body.sucursal = sucursal;\r\n        return this._call_post(this.URL() + '/transaccional/grabar', body);\r\n    },\r\n\r\n    printData(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n        user, option, contactMode, reasoncode, responsibleSector, registerSector, initContact, closeContact, embozo,\r\n        category, domicilio, sucursal, requestNumber) {\r\n\r\n        let body = {};\r\n        body.operationId = operationId;\r\n        body.documentType = documentType;\r\n        body.documentNumber = documentNumber;\r\n        body.productNumber = productNumber;\r\n        body.user = user;\r\n        body.origin = origin;\r\n        body.option = option;\r\n        body.contactMode = contactMode;\r\n        body.productCode = productCode;\r\n        body.causeCode = causeCode;\r\n        body.reasoncode = reasoncode;\r\n        body.companyCode = companyCode;\r\n        body.responsibleSector = responsibleSector;\r\n        body.registerSector = registerSector;\r\n        body.initContact = initContact;\r\n        body.closeContact = closeContact;\r\n        body.embozo = embozo;\r\n        body.category = category;\r\n        body.domicilio = domicilio;\r\n        body.sucursal = sucursal;\r\n        body.requestNumber = requestNumber;\r\n        return this._call_post_test(this.URL() + '/transaccional/imprimir', body);\r\n    }\r\n\r\n}\r\n\r\nexport default BaseService;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\n// services\r\nimport BaseService from '../services/baseService';\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: { flexGrow: 1, borderRadius: 0 }\r\n}))\r\n// end css\r\n\r\nexport default function CenteredGrid() {\r\n\r\n  // Entry params\r\n  let { operationId, productCode, causeCode, reasonCode, companyCode } = useParams();\r\n\r\n  // State variables\r\n  const [helpText, setHelpText] = React.useState('');\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  // Funcion hook para consultar la ayuda al operador\r\n  React.useEffect(() => {\r\n    async function callAPI() {\r\n      BaseService.getHelp(operationId, productCode, causeCode, reasonCode, companyCode)\r\n        .then(dataHelp => {\r\n          setHelpText(dataHelp.message);\r\n        })\r\n    }\r\n    callAPI();\r\n  }, [operationId, productCode, causeCode, reasonCode, companyCode]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert severity=\"info\">\r\n        <AlertTitle><strong>Tener en cuenta</strong></AlertTitle>\r\n        {helpText}\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// icons\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// start css\r\nconst useStyles = makeStyles(() => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  button: {\r\n    margin: 10, marginTop: 25, marginBottom: 30, textTransform: 'capitalize', backgroundColor: '#DB0011',\r\n    borderRadius: '0'\r\n  },\r\n  buttonOutlined: {\r\n    margin: 10, marginTop: 25, marginBottom: 30, textTransform: 'capitalize', color: '#DB0011',\r\n    borderRadius: '0'\r\n  },\r\n  alignItems: { textAlign: 'right' }\r\n\r\n}));\r\n// end css\r\n\r\nexport default function CenteredGrid({ getConfirmation, disable }) {\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}><div className={classes.alignItems}>\r\n      <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button} disabled={disable}\r\n        startIcon={<SaveIcon />} onClick={getConfirmation}>Guardar</Button>\r\n\r\n      <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n        startIcon={<CloseIcon />}>Salir</Button>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport { red } from '@material-ui/core/colors';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  backdrop: { zIndex: theme.zIndex.drawer + 1, color: '#fff' },\r\n  buttonProgress: {\r\n    color: red[500], position: 'absolute', top: '50%', left: '50%', margin: theme.spacing(1),\r\n    display: 'flex', alignItems: 'center'\r\n  }\r\n\r\n}));\r\n// end css\r\n\r\nfunction Loading({loading}) {\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {loading && <Backdrop className={classes.backdrop} open={loading}>\r\n          <CircularProgress size={40} className={classes.buttonProgress} />\r\n          </Backdrop>\r\n        }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars({openSnackbar, severity, message, setOpenSnackbar}) {\r\n  const classes = useStyles();\r\n\r\n\r\n  const handleClose = (reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={openSnackbar} autoHideDuration={2000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={severity}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// import css\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n// icons\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: { flexGrow: 1, borderRadius: 0 },\r\n    button: {\r\n        margin: 10, marginTop: 25, marginBottom: 30, textTransform: 'capitalize', backgroundColor: '#DB0011',\r\n        borderRadius: '0'\r\n    },\r\n    buttonOutlined: {\r\n        margin: 10, marginTop: 25, marginBottom: 30, textTransform: 'capitalize', color: '#DB0011',\r\n        borderRadius: '0'\r\n    },\r\n    alignItems: { textAlign: 'right' }\r\n\r\n}));\r\n// end css\r\n\r\nexport default function CenteredGrid({ saveData, resultRequest, resultStatus, resultMsg, firstOpen, setFirstOpen, secondOpen, setSecondOpen, printScreen }) {\r\n\r\n    // Entry params\r\n    let { option, origin } = useParams();\r\n\r\n    // State variables\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    // Funcion para configurar el mensaje de confirmación de \r\n    // acuerdo al valor del parametro option recibido\r\n    function Confirmation() {\r\n        if (option === 'ReimprimirDiferida') {\r\n            return <Typography gutterBottom>\r\n                ¿Está seguro que desea hacer una <strong variant=\"h5\" component=\"h2\">REIMPRESIÓN DIFERIDA</strong> de tarjeta de débito?\r\n            </Typography>;\r\n        } else if (option === 'ReimprimirTarjeta') {\r\n            return <Typography gutterBottom>\r\n                ¿Está seguro que desea hacer una <strong variant=\"h5\" component=\"h2\">REIMPRESIÓN</strong> de tarjeta de débito?\r\n            </Typography>;\r\n        } else if (option === 'BajaBanelco') {\r\n            return <Typography gutterBottom>\r\n                ¿Está seguro que desea <strong variant=\"h5\" component=\"h2\">DAR DE BAJA</strong> la tarjeta de débito?\r\n            </Typography>;\r\n        }\r\n    }\r\n\r\n    const handleCloseFirst = () => {\r\n        setFirstOpen(false);\r\n    };\r\n\r\n    const handleCloseSecond = () => {\r\n        setSecondOpen(false);\r\n    };\r\n\r\n    // Style variables\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Dialog fullScreen={fullScreen} open={firstOpen} onClose={handleCloseFirst} aria-labelledby=\"responsive-dialog-title\">\r\n                <DialogTitle id=\"responsive-dialog-title\">{\"Confirmación\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Confirmation />\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n                        startIcon={<CheckIcon />} onClick={saveData}>Aceptar</Button>\r\n                    <Button onClick={handleCloseFirst} variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n                        startIcon={<CloseIcon />}>Cancelar</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog fullScreen={fullScreen} open={secondOpen} onClose={handleCloseSecond} aria-labelledby=\"responsive-dialog-title\">\r\n                <DialogTitle id=\"responsive-dialog-title\">{\"Registración\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography gutterBottom>\r\n                            Se ha generado el pedido: <strong>{resultRequest}</strong> con estado <u><strong>{resultStatus}</strong></u>\r\n                        </Typography>\r\n                        <Typography gutterBottom>\r\n                            {resultMsg}\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n                        startIcon={<PrintIcon />} onClick={printScreen}>Imprimir</Button>\r\n                    <Button onClick={saveData} variant=\"outlined\" color=\"secondary\" size=\"large\" className={classes.buttonOutlined}\r\n                        startIcon={<AutorenewIcon />} style={{ display: (origin === 'SUCURSAL' && resultStatus !== 'Resuelto') ? 'inherit' : 'none' }}>Reintentar</Button>\r\n                    <Button onClick={handleCloseSecond} variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n                        startIcon={<CloseIcon />}>Cerrar</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import BaseService from \"./baseService\";\r\n\r\nconst ReprintService = {\r\n\r\n    _call_get(url) {\r\n        return fetch(url)\r\n            .then(res => res.json())\r\n            .catch(err => console.log(err))\r\n    },\r\n\r\n    getEmbozos(operationId, code) {\r\n        return this._call_get(BaseService.URL() + '/reimpresion/tarjetas/embozos?operationId=' + operationId + '&codigo=' + code);\r\n    },\r\n\r\n    getCardDetails(operationId, cardNumber) {\r\n        return this._call_get(BaseService.URL() + '/reimpresion/tarjetas/detalle?operationId=' + operationId + '&numero=' + cardNumber);\r\n    },\r\n\r\n    getBranchDetails(operationId) {\r\n        return this._call_get(BaseService.URL() + '/transaccional/sucursales?operationId=' + operationId);\r\n    }\r\n\r\n}\r\n\r\nexport default ReprintService;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NavbarModule from '../commonsModule/navbarModule';\r\nimport HelpModule from '../commonsModule/helpModule';\r\nimport ButtonsModule from '../commonsModule/buttonsModule';\r\nimport LoadingModule from '../commonsModule/loadingModule';\r\nimport SnackbarModule from '../commonsModule/snackbarModule';\r\nimport DialogsModule from '../commonsModule/dialogsModule';\r\n\r\n// import css\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MuiAccordion from \"@material-ui/core/Accordion\";\r\nimport MuiAccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n// services\r\nimport BaseService from '../services/baseService';\r\nimport ReprintService from '../services/reprintService';\r\n\r\n// start css\r\nconst useStyles = makeStyles(() => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  pos: { marginBottom: 12, },\r\n  divider: { marginTop: 25, marginBottom: 25 },\r\n  formControl: { width: '95%' },\r\n\r\n}));\r\n\r\nconst Accordion = withStyles({\r\n  root: {\r\n    boxShadow: \"none\",\r\n    \"&:not(:last-child)\": { borderBottom: 0 },\r\n    \"&:before\": { display: \"none\" },\r\n    \"&$expanded\": { margin: \"auto\" },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordion);\r\n\r\nconst AccordionSummary = withStyles({\r\n  root: {\r\n    marginBottom: -1, minHeight: 56,\r\n    \"&$expanded\": { minHeight: 56 },\r\n  },\r\n  content: {\r\n    \"&$expanded\": { margin: \"12px 0\" },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordionSummary);\r\n\r\nconst AccordionDetails = withStyles((theme) => ({\r\n  root: { padding: theme.spacing(2) },\r\n}))(MuiAccordionDetails);\r\n// end css\r\n\r\nexport default function ReprintFunc() {\r\n\r\n  // Entry params\r\n  let { operationId, option, documentType, documentNumber, businessName, contactModeCode, productCode, causeCode,\r\n    reasonCode, companyCode, responsibleSector, registerSector, user, origin,\r\n    initContact, closeContact, productNumber } = useParams();\r\n\r\n  // State variables\r\n  const [embozos, setEmbozos] = React.useState([]);\r\n  const [sucursales, setSucursales] = React.useState([]);\r\n  const [disable, setDisable] = React.useState(true);\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [expanded, setExpanded] = React.useState(\"\");\r\n  const [selectedDestino, setSelectedDestino] = React.useState('');\r\n  const [selectedSucursal, setSelectedSucursal] = React.useState('');\r\n  const [firstOpen, setFirstOpen] = React.useState(false);\r\n  const [secondOpen, setSecondOpen] = React.useState(false);\r\n  const [resultRequest, setResultRequest] = React.useState(\"\");\r\n  const [resultStatus, setResultStatus] = React.useState(\"\");\r\n  const [resultMsg, setResultMsg] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [showDomicilio, setShowDomicilio] = React.useState(false);\r\n  const [showSucursal, setShowSucursal] = React.useState(false);\r\n  const [showExterior, setShowExterior] = React.useState(false);\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n  const [severity, setSeverity] = React.useState('');\r\n  const [message, setMessage] = React.useState('');\r\n\r\n  // Ref variables\r\n  let domicilioEmbozo = React.useRef(null);\r\n  let domicilioCategoria = React.useRef(null);\r\n  let sucursalEmbozo = React.useRef(null);\r\n  let sucursalCategoria = React.useRef(null);\r\n  let exteriorEmbozo = React.useRef(null);\r\n  let exteriorCategoria = React.useRef(null);\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  // Get branches info\r\n  const updateBranches = () => {\r\n    ReprintService.getBranchDetails(operationId)\r\n      .then(dataSucursales => {\r\n        setSucursales(dataSucursales.branches);\r\n        setLoading(false);\r\n      })\r\n  }\r\n\r\n  // Handle onchange event (Sucursal)\r\n  const updateSelectedSucursal = (event, data) => {\r\n    setSelectedSucursal(data.props.label + \" (\" + data.props.value + \")\");\r\n  }\r\n\r\n  // Handle onchange event (Paneles)\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    if (panel === 'panelSucursal') { // Panel de Sucursal\r\n      setLoading(true);\r\n      updateBranches();\r\n      setSelectedDestino('SUCURSAL');\r\n      setDisable(true);\r\n    } else { // Panel de Domicilio\r\n      setSelectedSucursal(\"-\");\r\n      setSelectedDestino(panel === 'panelDomicilio' ? 'DOMICILIO' : 'EXTERIOR');\r\n    }\r\n    setExpanded(newExpanded ? panel : false);\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  // Funcion para guardar la registracion generada\r\n  const saveData = () => {\r\n    setFirstOpen(false);\r\n\r\n    let embozo = selectedDestino === 'DOMICILIO' ? domicilioEmbozo.current.outerText : sucursalEmbozo.current.outerText;\r\n    let category = selectedDestino === 'DOMICILIO' ? domicilioCategoria.current.outerText : sucursalCategoria.current.outerText;\r\n\r\n    if (embozo === 'SIN DATOS') {\r\n      setSeverity(\"error\")\r\n      setMessage(\"EMBOZO SIN VALOR\")\r\n      setOpenSnackbar(true)\r\n      return\r\n    }\r\n\r\n    if (category === 'SIN DATOS') {\r\n      setSeverity(\"error\")\r\n      setMessage(\"CATEGORÍA SIN VALOR\")\r\n      setOpenSnackbar(true)\r\n      return\r\n    }\r\n\r\n    setDisable(true);\r\n    setLoading(true);\r\n\r\n    BaseService.saveData(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, embozo,\r\n      category, \"-\", selectedSucursal)\r\n      .then(data => {\r\n        // TODO: Abrir un dialogo de informacion al usuario con el resultado\r\n        let pedido = data.registration.requestNumber;\r\n        let mensaje = data.registration.message;\r\n        let estado = data.registration.status;\r\n        setSecondOpen(true);\r\n        setResultRequest(pedido);\r\n        setResultStatus(estado);\r\n        setResultMsg(mensaje);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const getConfirmation = () => {\r\n    setFirstOpen(true);\r\n  }\r\n\r\n  // Funcion hook para consultar los detalles de la tarjeta y los embozos\r\n  React.useEffect(() => {\r\n    async function callAPI() {\r\n      ReprintService.getCardDetails(operationId, productNumber)\r\n        .then(data => {\r\n          ReprintService.getEmbozos(operationId, data.detalleTarjeta.reprint)\r\n            .then(dataEmbozos => {\r\n              setEmbozos(dataEmbozos.embozos);\r\n              setLoading(false);\r\n              dataEmbozos.embozos.map(embozo => {\r\n                if (embozo.destino === 'Domicilio') {\r\n                  setShowDomicilio(true);\r\n                }\r\n                if (embozo.destino === 'Sucursal') {\r\n                  setShowSucursal(true);\r\n                }\r\n                if (embozo.destino === 'Exterior') {\r\n                  setShowExterior(true);\r\n                }\r\n              })\r\n            });\r\n        })\r\n    }\r\n    callAPI();\r\n  }, [operationId, productNumber, setShowDomicilio, setShowSucursal, setShowExterior]);\r\n\r\n  const printScreen = () => {\r\n    let embozo = selectedDestino === 'DOMICILIO' ? domicilioEmbozo.current.outerText : sucursalEmbozo.current.outerText;\r\n    let category = selectedDestino === 'DOMICILIO' ? domicilioCategoria.current.outerText : sucursalCategoria.current.outerText;\r\n\r\n    setLoading(true);\r\n\r\n    BaseService.printData(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, embozo,\r\n      category, \"-\", selectedSucursal, resultRequest)\r\n      .then(data => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* start navbar */}\r\n      <NavbarModule></NavbarModule>\r\n      {/* end navbar */}\r\n\r\n      {/* start snackbar */}\r\n      <SnackbarModule openSnackbar={openSnackbar} severity={severity} message={message} setOpenSnackbar={setOpenSnackbar}></SnackbarModule>\r\n      {/* end snackbar */}\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={12}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Cliente\r\n                </Typography>\r\n                <br></br>\r\n                <Grid container spacing={3}>\r\n                  <Grid item lg={5}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Apellido y Nombre\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {businessName}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item lg={2}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo y Nº de Documento\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {documentType} - {documentNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={2}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Nº Banelco\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {productNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={2}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo Tarjeta\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      P.TIT.ELECTRON\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Destino\r\n                </Typography>\r\n                <br></br>\r\n                <div>\r\n                  <Accordion square expanded={expanded === \"panelDomicilio\"} key='acc-domicilio' style={{ display: showDomicilio ? 'inherit' : 'none' }}>\r\n                    <AccordionSummary aria-controls=\"panelDomiciliod-content\" id=\"panelDomiciliod-header\">\r\n                      <FormControl component=\"fieldset\">\r\n                        <RadioGroup aria-label=\"destino\" name=\"domicilio\" value={value} onChange={handleChange(\"panelDomicilio\")}\r\n                          onClick={() => setDisable(false)}>\r\n                          <FormControlLabel value=\"panelDomicilio\" control={<Radio />} label=\"Domicilio\" />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Domicilio\r\n                          </Typography>\r\n                          <Typography className={classes.pos} color=\"textSecondary\">\r\n\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Embozo\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Domicilio').map(fEmbozo => (\r\n                              <Typography key=\"domicilioEmbozo\" ref={domicilioEmbozo} className={classes.pos} color=\"textSecondary\">\r\n                                  {fEmbozo.embozo}\r\n                              </Typography>))\r\n                          }\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Categoría\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Domicilio').map(fEmbozo => (\r\n                              <Typography key=\"domicilioCategoria\" ref={domicilioCategoria} className={classes.pos} color=\"textSecondary\">{fEmbozo.categoria}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                  <Accordion square expanded={expanded === \"panelSucursal\"} key='acc-sucursal' style={{ display: showSucursal ? 'inherit' : 'none' }}>\r\n                    <AccordionSummary aria-controls=\"panelSucursald-content\" id=\"panelSucursald-header\">\r\n                      <FormControl component=\"fieldset\">\r\n                        <RadioGroup aria-label=\"destino\" name=\"sucursal\" value={value} onChange={handleChange(\"panelSucursal\")}>\r\n                          <FormControlLabel value=\"panelSucursal\" control={<Radio />} label=\"Sucursal\" />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item lg={2} xs={6}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Sucursal\r\n                          </Typography>\r\n                          <FormControl className={classes.formControl}>\r\n                            <Select onChange={updateSelectedSucursal}>\r\n                              {sucursales.map((sucursal) =>\r\n                                <MenuItem onClick={() => setDisable(false)} value={sucursal.numBranch} label={sucursal.branch}>{sucursal.branch}</MenuItem>)}\r\n                            </Select>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Embozo\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Sucursal').map(fEmbozo => (\r\n                              <Typography key=\"sucursalEmbozo\" ref={sucursalEmbozo} className={classes.pos} color=\"textSecondary\">{fEmbozo.embozo}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Categoría\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Sucursal').map(fEmbozo => (\r\n                              <Typography key=\"sucursalCategoria\" ref={sucursalCategoria} className={classes.pos} color=\"textSecondary\">{fEmbozo.categoria}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                  <Accordion square expanded={expanded === \"panelExterior\"} key='acc-exterior' style={{ display: showExterior ? 'inherit' : 'none' }}>\r\n                    <AccordionSummary aria-controls=\"panelExteriord-content\" id=\"panelExteriord-header\">\r\n                      <FormControl component=\"fieldset\">\r\n                        <RadioGroup aria-label=\"destino\" name=\"exterior\" value={value} onChange={handleChange(\"panelExterior\")}\r\n                          onClick={() => setDisable(false)}>\r\n                          <FormControlLabel value=\"panelExterior\" control={<Radio />} label=\"Exterior\" />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Exterior\r\n                          </Typography>\r\n                          <Typography className={classes.pos} color=\"textSecondary\">\r\n\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Embozo\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Exterior').map(fEmbozo => (\r\n                              <Typography key=\"exteriorEmbozo\" ref={exteriorEmbozo} className={classes.pos} color=\"textSecondary\">{fEmbozo.embozo}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Categoría\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Exterior').map(fEmbozo => (\r\n                              <Typography key=\"exteriorCategoria\" ref={exteriorCategoria} className={classes.pos} color=\"textSecondary\">{fEmbozo.categoria}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                </div>\r\n                <br></br>\r\n                <HelpModule />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Start Loading Module */}\r\n        <LoadingModule loading={loading}></LoadingModule>\r\n        {/* End Loading Module */}\r\n\r\n        {/* Start Dialog */}\r\n        <DialogsModule saveData={saveData} resultRequest={resultRequest} resultStatus={resultStatus}\r\n          resultMsg={resultMsg} firstOpen={firstOpen} setFirstOpen={setFirstOpen} printScreen={printScreen}\r\n          secondOpen={secondOpen} setSecondOpen={setSecondOpen}></DialogsModule>\r\n        {/* End Dialog */}\r\n\r\n        {/* Start Buttons Module */}\r\n        <ButtonsModule disable={disable} getConfirmation={getConfirmation}></ButtonsModule>\r\n        {/* End Buttons Module */}\r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NavbarModule from '../commonsModule/navbarModule';\r\nimport DialogsModule from '../commonsModule/dialogsModule';\r\nimport ButtonsModule from '../commonsModule/buttonsModule';\r\nimport LoadingModule from '../commonsModule/loadingModule';\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// services\r\nimport BaseService from '../services/baseService';\r\n\r\n// start css\r\nconst useStyles = makeStyles(() => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  pos: { marginBottom: 12, },\r\n  divider: { marginTop: 25, marginBottom: 25 },\r\n  formControl: { width: '95%' },\r\n\r\n}));\r\n// end css\r\n\r\nexport default function DischargeFunc() {\r\n\r\n  // Entry params\r\n  let { operationId, option, documentType, documentNumber, businessName, contactModeCode, productCode, causeCode,\r\n    reasonCode, companyCode, responsibleSector, registerSector, user, origin,\r\n    initContact, closeContact, productNumber } = useParams();\r\n\r\n  // State variables\r\n  const [disable, setDisable] = React.useState(false);\r\n  const [firstOpen, setFirstOpen] = React.useState(false);\r\n  const [secondOpen, setSecondOpen] = React.useState(false);\r\n  const [resultRequest, setResultRequest] = React.useState(\"\");\r\n  const [resultStatus, setResultStatus] = React.useState(\"\");\r\n  const [resultMsg, setResultMsg] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  // Funcion para guardar la registracion generada\r\n  const saveData = () => {\r\n    setFirstOpen(false);\r\n    setDisable(true);\r\n    setLoading(true);\r\n\r\n    BaseService.saveData(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, \"\", \"\")\r\n      .then(data => {\r\n        let pedido = data.registration.requestNumber;\r\n        let mensaje = data.registration.message;\r\n        let estado = data.registration.status;\r\n        setSecondOpen(true);\r\n        setResultRequest(pedido);\r\n        setResultStatus(estado);\r\n        setResultMsg(mensaje);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const getConfirmation = () => {\r\n    setFirstOpen(true);\r\n  }\r\n\r\n  const printData = () => {\r\n    setLoading(true);\r\n\r\n    BaseService.printData(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, \"\",\r\n      \"\", \"\", \"\", resultRequest)\r\n      .then(data => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* Start Navbar Module */}\r\n      <NavbarModule />\r\n      {/* End Navbar Module */}\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={12}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Cliente\r\n                </Typography>\r\n                <br></br>\r\n                <Grid container spacing={6}>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Apellido y Nombre\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {businessName}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo y Nº de Documento\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {documentType} - {documentNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n                <Grid container spacing={6}>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Nº Banelco\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {productNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo Tarjeta\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      P.TIT.ELECTRON\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Start Loading Module */}\r\n        <LoadingModule loading={loading}></LoadingModule>\r\n        {/* End Loading Module */}\r\n\r\n        {/* Start Dialog */}\r\n        <DialogsModule saveData={saveData} resultRequest={resultRequest} resultStatus={resultStatus}\r\n          resultMsg={resultMsg} firstOpen={firstOpen} setFirstOpen={setFirstOpen} printScreen={printData}\r\n          secondOpen={secondOpen} setSecondOpen={setSecondOpen}></DialogsModule>\r\n        {/* End Dialog */}\r\n\r\n        {/* Start Buttons Module */}\r\n        <ButtonsModule disable={disable} getConfirmation={getConfirmation}></ButtonsModule>\r\n        {/* End Buttons Module */}\r\n      </Container>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport ReprintModule from './components/reprintModule/reprintModule';\r\nimport DischargeModule from './components/dischargeModule/dischargeModule';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/reprint/1509090912980128785211/ReimprimirTarjeta/DNI/10266305/BRINGIOTTI,%20MANUEL/Email/B/P/34/2/955/041/43275857/BANCA/Email/Email/4517610097274041\">Reimpresión Común de Tarjeta Banelco</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/reprint/1509090912980128785211/ReimprimirDiferida/DNI/10266305/BRINGIOTTI,%20MANUEL/Email/B/P/34/2/955/041/43275857/BANCA/Email/Email/4517610097274041\">Reimpresión Diferida de Tarjeta Banelco</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/discharge/1509090912980128785211/BajaBanelco/DNI/10266305/BRINGIOTTI,%20MANUEL/Email/B/P/34/2/955/041/43275857/BANCA/Email/Email/4517610097274041\">Baja de Tarjeta Banelco</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <Switch>\r\n          <Route path=\"/reprint/:operationId/:option/:documentType/:documentNumber/:businessName/:contactModeCode/:productCode/:causeCode/:reasonCode/:companyCode/:responsibleSector/:registerSector/:user/:origin/:initContact/:closeContact/:productNumber\" component={Reprint} />\r\n          <Route path=\"/discharge/:operationId/:option/:documentType/:documentNumber/:businessName/:contactModeCode/:productCode/:causeCode/:reasonCode/:companyCode/:responsibleSector/:registerSector/:user/:origin/:initContact/:closeContact/:productNumber\" component={Discharge} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App\r\n\r\nfunction Reprint() {\r\n  return <ReprintModule></ReprintModule>;\r\n}\r\n\r\nfunction Discharge() {\r\n  return <DischargeModule></DischargeModule>;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App></App>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}