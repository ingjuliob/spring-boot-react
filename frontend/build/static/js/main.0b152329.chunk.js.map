{"version":3,"sources":["reportWebVitals.js","img/logo.svg","components/commonsModule/navbarModule.js","components/services/utilsService.js","components/services/baseService.js","components/commonsModule/helpModule.js","components/commonsModule/buttonsModule.js","components/commonsModule/loadingModule.js","components/commonsModule/snackbarModule.js","components/commonsModule/dialogsModule.js","components/commonsModule/dataUpload.js","components/commonsModule/uploadFile.js","img/vertical-line.svg","components/reprintModule/tabs.js","components/services/reprintService.js","components/reprintModule/reprintModule.js","components/dischargeModule/dischargeModule.js","components/resetPinModule/resetPinModule.js","components/services/closeChangeService.js","components/closeChangeModule/closeChangeModule.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","root","flexGrow","borderRadius","appbar","background","paddingTop","paddingBottom","marginBottom","color","navbarTitle","textAlign","fontStyle","CenteredGrid","option","useParams","React","useState","tipo","setTipo","classes","useEffect","className","AppBar","position","Container","maxWidth","Toolbar","src","logo","alt","Typography","variant","UtilsService","URL","_call_get","url","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","res","json","catch","err","console","log","_call_post","body","JSON","stringify","_call_post_blob","filename","requestNumber","response","blob","href","window","createObjectURL","link","document","createElement","setAttribute","appendChild","click","_call_post_file","data","getCommonParams","operationId","productCode","causeCode","companyCode","documentType","documentNumber","businessName","productNumber","origin","user","contactMode","reasonCode","responsibleSector","registerSector","initContact","closeContact","commonParams","reasoncode","retry","observation","BaseService","getHelp","getDocumentalRelations","saveData","transactionalRequest","saveDataWithFiles","relaciones","relTipoDocumentalProducto","resumen","relacion","files","uploadFile","printData","generateRegistrationNumber","adjuntos","file","attached","arcNumPed","arcTipDoc","arcNumDoc","arcNombreOri","name","arcNombreDef","arcClasificacion","codClasificacion","arcCodTipodocumental","codTipoDocumental","arcTipodocumental","tipoDocumental","arcEstado","arcRepoDef","temporal","arcOperationId","FormData","append","Blob","type","ok","icon","title","marginLeft","verticalAlign","fontSize","textarea","width","backgroundColor","border","fontFamily","helpText","setHelpText","a","dataHelp","message","callAPI","style","padding","component","TextareaAutosize","aria-label","minRows","disabled","value","button","margin","marginTop","textTransform","buttonOutlined","alignItems","getConfirmation","disable","valueButton","Button","size","startIcon","onClick","close","backdrop","zIndex","drawer","buttonProgress","red","top","left","spacing","display","Loading","loading","Backdrop","open","CircularProgress","Alert","props","elevation","CustomizedSnackbars","openSnackbar","severity","setOpenSnackbar","handleClose","reason","Snackbar","autoHideDuration","onClose","resultRequest","resultStatus","resultMsg","firstOpen","setFirstOpen","secondOpen","setSecondOpen","printScreen","useTheme","fullScreen","useMediaQuery","breakpoints","down","Confirmation","gutterBottom","handleCloseFirst","handleCloseSecond","Dialog","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","text","arrow","paddingRight","paddingLeft","filesListItem","fontBlue","fontRed","UploadFile","relation","setFiles","setAttached","filesRemoveOne","fileToRemove","remainingFiles","filter","currentTarget","length","esAddFiles","Grid","container","item","lg","onChange","filesToAdd","onError","error","code","accepts","multiple","maxFileSize","minFileSize","clickable","htmlFor","Tooltip","IconButton","map","sizeReadable","bind","flex","divider","app","h6","clientRelations","productRelations","Card","CardContent","existeEnSAC","Divider","palette","paper","ReprintService","getEmbozos","getCardDetails","cardNumber","getBranchDetails","pos","line","height","formControl","heading","flexBasis","flexShrink","paddingLine","attach","secondaryHeading","typography","pxToRem","secondary","alignSelf","Accordion","withStyles","boxShadow","borderBottom","expanded","MuiAccordion","AccordionSummary","minHeight","content","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","ReprintFunc","contactModeCode","embozos","setEmbozos","sucursales","setSucursales","setDisable","setValue","setExpanded","selectedDestino","setSelectedDestino","selectedSucursal","setSelectedSucursal","openUploadFiles","setOpenUploadFiles","setResultRequest","setResultStatus","setResultMsg","setLoading","showDomicilio","setShowDomicilio","showSucursal","setShowSucursal","showExterior","setShowExterior","setSeverity","setMessage","isAddFiles","setIsAddFiles","setClientRelations","setProductRelations","domicilioEmbozo","useRef","domicilioCategoria","sucursalEmbozo","sucursalCategoria","exteriorEmbozo","exteriorCategoria","handleChange","panel","event","newExpanded","dataSucursales","branches","target","embozo","current","outerText","category","relTipoDocumentalCliente","productFiles","adjuntarArchivos","reprintTdParams","_getReprintTdParams","pedido","registration","mensaje","estado","status","detalleTarjeta","reprint","dataEmbozos","destino","domicilio","sucursal","square","aria-controls","FormControl","RadioGroup","FormControlLabel","control","Radio","label","fEmbozo","ref","categoria","Select","MenuItem","numBranch","branch","expandIcon","DischargeFunc","CloseChangeService","getTarjetas","docType","docNum","formControl2","minWidth","selectEmpty","tabla","table","CloseChangeFunc","cartera","setCartera","rows","setRows","classTable","cardAccArr","_getCloseChangeParams","row","closeChangeParams","apellidoNombre","cardhName","nroTarjeta","cardNum","primAcctInfo","statDesc","entityAdm","acctIdNum","codeAdm","restrCde","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","scope","typeIdfcCde","idfcNum","xs","commonsParams","App","basename","path","process","Reprint","Discharge","ResetPin","CloseChange","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0b152329.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/logo.a1dd3a73.svg\";","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport logo from '../../img/logo.svg';\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  appbar: { background: 'white', paddingTop: 10, paddingBottom: 10, marginBottom: 25, color: 'black' },\r\n  navbarTitle: { flexGrow: 1, textAlign: 'right', fontStyle: 'uppercase' }\r\n\r\n}));\r\n// end css\r\n\r\nexport default function CenteredGrid() {\r\n\r\n  // Entry params\r\n  let { option } = useParams();\r\n\r\n  // State variables\r\n  const [tipo, setTipo] = React.useState(\"\");\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  // Funcion hook para configurar el nombre de la transaccional de \r\n  // acuerdo al valor del parametro option recibido\r\n  React.useEffect(() => {\r\n    if (option === 'ReimprimirDiferida') {\r\n      setTipo(\"Reimpresión Diferida de Tarjeta Banelco\");\r\n    } else if (option === 'ReimprimirTarjeta') {\r\n      setTipo(\"Reimpresión Común de Tarjeta Banelco\");\r\n    } else if (option === 'BajaBanelco') {\r\n      setTipo(\"Baja de Tarjeta Banelco\");\r\n    } else if (option === 'BlanqueoPin') {\r\n      setTipo(\"Blanqueo de PIN\");\r\n    } else if (option === 'CambioCierre' || option === 'CambioCierreTC' || option === 'CbioCierreCartera') {\r\n      setTipo(\"Cambio de Cierre TC\");\r\n    }\r\n  }, [option]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appbar}>\r\n        <Container maxWidth=\"lg\">\r\n          <Toolbar>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <Typography variant=\"h6\" className={classes.navbarTitle}>\r\n              {tipo}\r\n            </Typography>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","const UtilsService = {\r\n\r\n    URL() {\r\n        return 'http://ard032vlncap.ar.hsbc:21228/sacweb/control';\r\n    },\r\n\r\n    _call_get(url) {\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer'\r\n        })\r\n            .then(res => res.json())\r\n            .catch(err => console.log(err))\r\n    },\r\n\r\n    _call_post(url, body) {\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then(res => res.json())\r\n            .catch(err => console.log(err))\r\n    },\r\n\r\n    _call_post_blob(url, body) {\r\n        let filename = body.option + \"_\" + body.requestNumber + \".pdf\";\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then(function (response) {\r\n                return response.blob();\r\n            }).then(function (blob) {\r\n                const href = window.URL.createObjectURL(blob);\r\n                const link = document.createElement('a');\r\n                link.href = href;\r\n                link.setAttribute('download', filename);\r\n                document.body.appendChild(link);\r\n                link.click();\r\n            })\r\n            .catch(err => console.log(err))\r\n    },\r\n\r\n    async _call_post_file(url, data) {\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: data\r\n        })\r\n            .catch(err => console.log(err))\r\n    },\r\n\r\n    getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, businessName, productNumber, origin,\r\n        user, option, contactMode, reasonCode, responsibleSector, registerSector, initContact, closeContact, requestNumber) {\r\n\r\n        let commonParams = {};\r\n        commonParams.operationId = operationId;\r\n        commonParams.documentType = documentType;\r\n        commonParams.documentNumber = documentNumber;\r\n        commonParams.businessName = businessName;\r\n        commonParams.productNumber = productNumber;\r\n        commonParams.user = user;\r\n        commonParams.origin = origin;\r\n        commonParams.option = option;\r\n        commonParams.contactMode = contactMode;\r\n        commonParams.productCode = productCode;\r\n        commonParams.causeCode = causeCode;\r\n        commonParams.reasoncode = reasonCode;\r\n        commonParams.companyCode = companyCode;\r\n        commonParams.responsibleSector = responsibleSector;\r\n        commonParams.registerSector = registerSector;\r\n        commonParams.initContact = initContact;\r\n        commonParams.closeContact = closeContact;\r\n        commonParams.requestNumber = requestNumber;\r\n        commonParams.retry = requestNumber ? true : false;\r\n        commonParams.observation = \"\";\r\n        return commonParams;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default UtilsService;","import UtilsService from \"./utilsService\";\r\n\r\nconst BaseService = {\r\n\r\n    getHelp(operationId, productCode, causeCode, reasonCode, companyCode) {\r\n        return UtilsService._call_get(UtilsService.URL() + '/transaccional/parametros/ayuda?operationId=' + operationId + '&productCode=' + productCode + '&causeCode=' + causeCode + '&reasonCode=' + reasonCode + '&companyCode=' + companyCode);\r\n    },\r\n\r\n    getDocumentalRelations(operationId, causeCode, reasonCode, documentType, documentNumber) {\r\n        return UtilsService._call_get(UtilsService.URL() + '/transaccional/parametros/relacionesTipoDocumental?operationId=' + operationId + '&causeCode=' + causeCode + '&reasonCode=' + reasonCode + '&documentType=' + documentType + '&documentNumber=' + documentNumber);\r\n    },\r\n\r\n    saveData(transactionalRequest) {\r\n        return UtilsService._call_post(UtilsService.URL() + '/transaccional/grabar', transactionalRequest);\r\n    },\r\n\r\n    async saveDataWithFiles(transactionalRequest) {\r\n        var relaciones = transactionalRequest.commonParams.relTipoDocumentalProducto;\r\n        var resumen = '\\n*************************************************************\\nDocumentos adjuntos en la carga del SAC:\\n';\r\n        for (const relacion of relaciones) {\r\n            if (relacion.files) {\r\n                let response = await this.uploadFile(transactionalRequest, relacion);\r\n                resumen = resumen + response;\r\n            }\r\n            console.log(\"Observaciones:\")\r\n            console.log(resumen);\r\n        }\r\n        transactionalRequest.commonParams.observation = resumen;\r\n        return UtilsService._call_post(UtilsService.URL() + '/transaccional/grabar', transactionalRequest);\r\n    },\r\n\r\n    printData(transactionalRequest) {\r\n        return UtilsService._call_post_blob(UtilsService.URL() + '/transaccional/imprimir', transactionalRequest);\r\n    },\r\n\r\n    generateRegistrationNumber(operationId, companyCode, causeCode) {\r\n        return UtilsService._call_get(UtilsService.URL() + '/transaccional/generarNumeroPedido?operationId=' + operationId + '& companyCode=' + companyCode + '&causeCode=' + causeCode);\r\n    },\r\n\r\n    async uploadFile(transactionalRequest, relacion) {\r\n\r\n        var adjuntos = '';\r\n        for (const file of relacion.files) {\r\n            var attached = {}\r\n            attached.arcNumPed = transactionalRequest.commonParams.requestNumber;\r\n            attached.arcTipDoc = transactionalRequest.commonParams.documentType;\r\n            attached.arcNumDoc = transactionalRequest.commonParams.documentNumber;\r\n            attached.arcNombreOri = file.name;\r\n            attached.arcNombreDef = file.name;\r\n            attached.arcClasificacion = relacion.codClasificacion;\r\n            attached.arcCodTipodocumental = relacion.codTipoDocumental;\r\n            attached.arcTipodocumental = relacion.tipoDocumental;\r\n            attached.arcEstado = \"A\";\r\n            attached.arcRepoDef = \"S\" === relacion.temporal ? \"BD\" : \"FN\";\r\n            attached.arcOperationId = transactionalRequest.commonParams.operationId;\r\n            let data = new FormData();\r\n            data.append('file', file);\r\n            data.append('attached',\r\n                new Blob([JSON.stringify(attached)], {\r\n                    type: 'application/json'\r\n                }));\r\n            console.log(\"Enviando archivo \" + attached.arcNombreOri);\r\n            let response = await UtilsService._call_post_file(UtilsService.URL() + '/transaccional/uploadFile', data);\r\n            if (response.ok) {\r\n                adjuntos = adjuntos + attached.arcTipodocumental + \": \" + attached.arcNombreOri + ' (Grabado OK)\\n';\r\n                console.log(\"Enviado. \" + attached.arcNombreOri);\r\n            } else {\r\n                adjuntos = adjuntos + attached.arcTipodocumental + \": \" + attached.arcNombreOri + ' (ERROR al grabar)\\n';\r\n                console.log(\"NO Enviado. \" + attached.arcNombreOri);\r\n            }\r\n        }\r\n        return adjuntos;\r\n    }\r\n\r\n}\r\n\r\nexport default BaseService;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\n// services\r\nimport BaseService from '../services/baseService';\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  icon: { color: '#00b7ff' },\r\n  title: { marginLeft: '1%', verticalAlign: '5px', color: '#24557d', fontSize: 'large' },\r\n  textarea: { width: '99%', backgroundColor: 'aliceblue', border: 'none', fontFamily: 'inherit', color: '#24557d' }\r\n}))\r\n// end css\r\n\r\nexport default function CenteredGrid() {\r\n\r\n  // Entry params\r\n  let { operationId, productCode, causeCode, reasonCode, companyCode } = useParams();\r\n\r\n  // State variables\r\n  const [helpText, setHelpText] = React.useState('');\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  // Funcion hook para consultar la ayuda al operador\r\n  React.useEffect(() => {\r\n    async function callAPI() {\r\n      BaseService.getHelp(operationId, productCode, causeCode, reasonCode, companyCode)\r\n        .then(dataHelp => {\r\n          setHelpText(dataHelp.message);\r\n        })\r\n    }\r\n    callAPI();\r\n  }, [operationId, productCode, causeCode, reasonCode, companyCode]);\r\n\r\n  return (\r\n    <div className={classes.root} style={{ backgroundColor: 'aliceblue', padding: '2%' }}>\r\n\r\n      <Typography variant=\"h6\" component=\"h2\">\r\n        <ErrorOutlineIcon className={classes.icon} />\r\n        <strong className={classes.title}>Tener en cuenta</strong>\r\n        <br></br>\r\n      </Typography>\r\n      <TextareaAutosize aria-label=\"minimum height\" minRows={3} disabled className={classes.textarea} value={helpText}>\r\n      </TextareaAutosize>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// icons\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// start css\r\nconst useStyles = makeStyles(() => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  button: {\r\n    margin: 10, marginTop: 25, marginBottom: 30, textTransform: 'capitalize', backgroundColor: '#DB0011',\r\n    borderRadius: '0'\r\n  },\r\n  buttonOutlined: {\r\n    margin: 10, marginTop: 25, marginBottom: 30, textTransform: 'capitalize', color: '#DB0011',\r\n    borderRadius: '0'\r\n  },\r\n  alignItems: { textAlign: 'right' }\r\n\r\n}));\r\n// end css\r\n\r\nexport default function CenteredGrid({ getConfirmation, disable, valueButton }) {\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  const closeWindow = () => {\r\n    window.close();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.alignItems}>\r\n        <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button} disabled={disable}\r\n          startIcon={<SaveIcon />} onClick={getConfirmation}>{valueButton}</Button>\r\n\r\n        <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n          onClick={closeWindow} startIcon={<CloseIcon />}>Salir</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport { red } from '@material-ui/core/colors';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  backdrop: { zIndex: theme.zIndex.drawer + 1, color: '#fff' },\r\n  buttonProgress: {\r\n    color: red[500], position: 'absolute', top: '50%', left: '50%', margin: theme.spacing(1),\r\n    display: 'flex', alignItems: 'center'\r\n  }\r\n\r\n}));\r\n// end css\r\n\r\nfunction Loading({loading}) {\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {loading && <Backdrop className={classes.backdrop} open={loading}>\r\n          <CircularProgress size={40} className={classes.buttonProgress} />\r\n          </Backdrop>\r\n        }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars({openSnackbar, severity, message, setOpenSnackbar}) {\r\n  const classes = useStyles();\r\n\r\n\r\n  const handleClose = (reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={openSnackbar} autoHideDuration={2000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={severity}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// import css\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n// icons\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: { flexGrow: 1, borderRadius: 0 },\r\n    button: {\r\n        margin: 10, marginTop: 25, marginBottom: 25, textTransform: 'capitalize', backgroundColor: '#DB0011',\r\n        borderRadius: '0'\r\n    },\r\n    buttonOutlined: {\r\n        margin: 10, marginTop: 25, marginBottom: 30, textTransform: 'capitalize', color: '#DB0011',\r\n        borderRadius: '0'\r\n    },\r\n\r\n}));\r\n// end css\r\n\r\nexport default function CenteredGrid({ saveData, resultRequest, resultStatus, resultMsg, firstOpen, setFirstOpen, secondOpen, setSecondOpen, printScreen }) {\r\n\r\n  // Entry params\r\n    let { option, origin } = useParams();\r\n\r\n    // State variables\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    // Funcion para configurar el mensaje de confirmación de \r\n    // acuerdo al valor del parametro option recibido\r\n    function Confirmation() {\r\n        if (option === 'ReimprimirDiferida') {\r\n            return <Typography gutterBottom>\r\n                ¿Está seguro que desea hacer una <strong variant=\"h5\" component=\"h2\">REIMPRESIÓN DIFERIDA</strong> de tarjeta de débito?\r\n            </Typography>;\r\n        } else if (option === 'ReimprimirTarjeta') {\r\n            return <Typography gutterBottom>\r\n                ¿Está seguro que desea hacer una <strong variant=\"h5\" component=\"h2\">REIMPRESIÓN</strong> de tarjeta de débito?\r\n            </Typography>;\r\n        } else if (option === 'BajaBanelco') {\r\n            return <Typography gutterBottom>\r\n                ¿Está seguro que desea <strong variant=\"h5\" component=\"h2\">DAR DE BAJA</strong> la tarjeta de débito?\r\n            </Typography>;\r\n        } else if (option === 'BlanqueoPin') {\r\n            return <Typography gutterBottom>\r\n                ¿Está seguro que desea <strong variant=\"h5\" component=\"h2\">BLANQUEAR EL PIN</strong> de la tarjeta de débito?\r\n            </Typography>;\r\n        } else if (option === 'CambioCierre' || option === 'CambioCierreTC' || option === 'CbioCierreCartera') {\r\n            return <Typography gutterBottom>\r\n                ¿Está seguro que desea <strong variant=\"h5\" component=\"h2\">CAMBIAR EL CIERRE DE CARTERA</strong> de la tarjeta de crédito?\r\n            </Typography>;\r\n        }\r\n    }\r\n\r\n    const handleCloseFirst = () => {\r\n        setFirstOpen(false);\r\n    };\r\n\r\n    const handleCloseSecond = () => {\r\n        setSecondOpen(false);\r\n        window.close();\r\n    };\r\n\r\n    const retrySaveData = () => {\r\n        saveData(true);\r\n    };\r\n\r\n    // Style variables\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* start dialog confirmation */}\r\n            <Dialog fullScreen={fullScreen} open={firstOpen} onClose={handleCloseFirst} aria-labelledby=\"responsive-dialog-title\">\r\n                <DialogTitle id=\"responsive-dialog-title\">{\"Confirmación\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Confirmation />\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n                        startIcon={<CheckIcon />} onClick={saveData}>Aceptar</Button>\r\n                    <Button onClick={handleCloseFirst} variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n                        startIcon={<CloseIcon />}>Cancelar</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* start dialog result */}\r\n            <Dialog fullScreen={fullScreen} open={secondOpen} onClose={handleCloseSecond} aria-labelledby=\"responsive-dialog-title\">\r\n                <DialogTitle id=\"responsive-dialog-title\">{\"Registración\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography gutterBottom>\r\n                            Se ha generado el pedido: <strong>{resultRequest}</strong> con estado <u><strong>{resultStatus}</strong></u>\r\n                        </Typography>\r\n                        <Typography gutterBottom>\r\n                            {resultMsg}\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n                        startIcon={<PrintIcon />} onClick={printScreen}>Imprimir</Button>\r\n                    <Button onClick={retrySaveData} variant=\"outlined\" color=\"secondary\" size=\"large\" className={classes.buttonOutlined}\r\n                        startIcon={<AutorenewIcon />} style={{ display: (origin === 'BANCA' && resultStatus !== 'Resuelto') ? 'inherit' : 'none' }}>Reintentar</Button>\r\n                    <Button onClick={handleCloseSecond} variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n                        startIcon={<CloseIcon />}>Salir</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Files from 'react-files'\r\n\r\n// material\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// icons\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: { flexGrow: 1, borderRadius: 0 },\r\n    text: { marginBottom: 0, padding: 0, margin: 0 },\r\n    arrow: { paddingRight: 15, paddingLeft: 15, width: 10, verticalAlign: 'bottom' },\r\n    alignItems: { alignItems: 'center' },\r\n    filesListItem: { display: 'flex', alignItems: 'center' },\r\n    fontSize: { fontSize: '0.75rem', margin: 0 },\r\n    fontBlue: { fontSize: '0.75rem', margin: 0, color: 'blue' },\r\n    fontRed: { fontSize: '0.75rem', margin: 0, color: 'red' }\r\n\r\n}));\r\n// end css\r\n\r\nexport default function UploadFile({ relation }) {\r\n\r\n    //   // Style variables\r\n    const classes = useStyles();\r\n\r\n    //   // State variables\r\n    const [files, setFiles] = React.useState([]);\r\n    const [attached, setAttached] = React.useState(false);\r\n\r\n    const onFilesChange = (filesToAdd) => {\r\n        setFiles([...files, ...filesToAdd]);\r\n        setAttached(filesToAdd.length > 0);\r\n        relation.files = [...files, ...filesToAdd];\r\n        relation.esAddFiles = true;\r\n    }\r\n\r\n    const onFilesError = (error, file) => {\r\n        console.log('error code ' + error.code + ': ' + error.message)\r\n    }\r\n\r\n    const filesRemoveOne = (fileToRemove) => {\r\n        let remainingFiles = files.filter(file => file.id !== fileToRemove.currentTarget.id);\r\n        setFiles(remainingFiles);\r\n        relation.files = remainingFiles;\r\n        if (remainingFiles.length === 0) {\r\n            setAttached(false);\r\n            relation.esAddFiles = false;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={3} className={classes.alignItems}>\r\n            <Grid item lg={4}>\r\n                <Typography className={attached ? classes.fontBlue : classes.fontSize} color=\"textSecondary\" variant=\"h6\" component=\"h6\">\r\n                    <FiberManualRecordIcon className={classes.arrow} />\r\n                    {relation.tipoDocumental}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item lg={1}>\r\n                <Files className='files-dropzone' onChange={onFilesChange} onError={onFilesError} accepts={['image/png', '.pdf', '.xls', '.xlsx', '.doc', '.docx', '.txt', '.tif', '.tiff', '.csv', '.msg']}\r\n                    multiple maxFileSize={5000000} minFileSize={0} clickable>\r\n                    <label htmlFor=\"raised-button-file\">\r\n                        <Tooltip title=\"click para seleccionar uno o más archivos\">\r\n                            <IconButton variant=\"contained\" style={{ color: '#4caf50' }} size=\"large\" component=\"span\">\r\n                                <QueueIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </label>\r\n                </Files>\r\n            </Grid>\r\n            <Grid item lg={7}>\r\n                {\r\n                    files.length > 0\r\n                        ? <div className='files-list'>\r\n                            <ul variant=\"caption\" display=\"block\" gutterBottom className={classes.text}>\r\n                                {files.map((file) =>\r\n                                    <li className={classes.filesListItem} key={file.id}>\r\n                                        <div className='files-list-item-content'>\r\n                                            <div className='files-list-item-content-item files-list-item-content-item-1'>\r\n                                                <p className={classes.fontBlue}>\r\n                                                    {file.name} <strong>({file.sizeReadable})</strong>\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Tooltip title=\"click para eliminar archivo\">\r\n                                            <IconButton id={file.id} onClick={filesRemoveOne.bind(file)} aria-label=\"delete\" size=\"small\">\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </li>\r\n                                )}\r\n                            </ul>\r\n                        </div>\r\n                        : <p className={classes.fontSize}>No se han seleccionado archivos.</p>\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React from \"react\";\r\nimport DataUpload from './dataUpload';\r\n\r\n// material\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// icons\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: { flexGrow: 1, borderRadius: 0 },\r\n    flex: { display: 'flex', alignItems: 'center' },\r\n    arrow: { paddingRight: 15, paddingLeft: 15, width: 10, verticalAlign: 'bottom' },\r\n    alignItems: { alignItems: 'center' },\r\n    divider: { marginTop: 5, marginBottom: 5 },\r\n    app: { width: '100%' },\r\n    fontBlue: { fontSize: '0.75rem', color: 'blue' },\r\n    fontRed: { fontSize: '0.75rem', color: 'red' },\r\n    h6: { fontSize: '1rem' }\r\n\r\n}));\r\n// end css\r\n\r\nexport default function UploadFile({ clientRelations, productRelations }) {\r\n\r\n    // Style variables\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div className={classes.app}>\r\n\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item lg={12}>\r\n                            <Typography variant=\"h6\" component=\"h6\" className={classes.h6}>\r\n                                Documentos de Cliente (ingresados desde la solapa <b>\"Datos del Cliente\"</b>)\r\n                            </Typography>\r\n\r\n                            <br></br>\r\n                            {(clientRelations.length > 1) ?\r\n\r\n                                clientRelations.map(relation => (\r\n                                    <>\r\n                                        <Grid container spacing={3} className={classes.alignItems}>\r\n                                            <Grid item lg={4}>\r\n                                                <Typography color=\"textSecondary\" variant=\"h6\" component=\"h6\" className={relation.existeEnSAC ? classes.fontBlue : classes.fontRed}>\r\n                                                    <FiberManualRecordIcon className={classes.arrow} />\r\n                                                    {relation.tipoDocumental}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            {relation.existeEnSAC ?\r\n                                                <Grid item lg={8}>\r\n                                                    <Tooltip title=\"El archivo ya ha sido cargado.\">\r\n                                                        <IconButton aria-label=\"delete\" size=\"small\">\r\n                                                            <CheckIcon />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Grid>\r\n                                                :\r\n                                                <Grid item lg={8}>\r\n                                                    <Tooltip title=\"El archivo aún no se ha cargado.\">\r\n                                                        <IconButton aria-label=\"delete\" size=\"small\">\r\n                                                            <CloseIcon />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Grid>}\r\n                                        </Grid>\r\n                                        <Divider variant=\"middle\" className={classes.divider} />\r\n                                    </>\r\n\r\n                                ))\r\n\r\n                                :\r\n                                <Typography>\r\n                                    Esta solicitud no requiere adjuntar documentos de cliente.\r\n                                </Typography>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <br></br>\r\n\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item lg={12}>\r\n                            <Typography className={classes.h6} variant=\"h6\" component=\"h6\">\r\n                                Documentos de Producto\r\n                            </Typography>\r\n\r\n                            <br></br>\r\n\r\n                            {(productRelations.length > 1) ?\r\n                                productRelations.map(relation => (\r\n                                    <>\r\n                                        <DataUpload relation={relation}></DataUpload>\r\n                                        <Divider variant=\"middle\" className={classes.divider} />\r\n                                    </>\r\n                                ))\r\n                                :\r\n                                <Typography>\r\n                                    Esta solicitud no requiere adjuntar documentos de producto.\r\n                                </Typography>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </div >\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/vertical-line.644d6634.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// css\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// material\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div role=\"tabpanel\" hidden={value !== index} id={`nav-tabpanel-${index}`} aria-labelledby={`nav-tab-${index}`} {...other}>\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `nav-tab-${index}`,\r\n        'aria-controls': `nav-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n    return (\r\n        <Tab component=\"a\" onClick={(event) => { event.preventDefault(); }} {...props} />\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function NavTabs({ embozos, domicilioEmbozo, domicilioCategoria, exteriorCategoria, exteriorEmbozo }) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Tabs variant=\"fullWidth\" value={value} onChange={handleChange} aria-label=\"nav tabs example\">\r\n                    <LinkTab label=\"Domicilio\" href=\"/drafts\" {...a11yProps(0)} />\r\n                    <LinkTab label=\"Sucursal\" href=\"/trash\" {...a11yProps(1)} />\r\n                    <LinkTab label=\"Exterior\" href=\"/spam\" {...a11yProps(2)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item lg={2}>\r\n                        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Domicilio\r\n                          </Typography>\r\n                        <Typography className={classes.pos} color=\"textSecondary\">\r\n\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item lg={2}>\r\n                        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Embozo\r\n                          </Typography>\r\n                        {\r\n                            embozos.filter(embozo => embozo.destino === 'Domicilio').map(fEmbozo => (\r\n                                <Typography key=\"domicilioEmbozo\" ref={domicilioEmbozo} className={classes.pos} color=\"textSecondary\">\r\n                                    {fEmbozo.embozo}\r\n                                </Typography>))\r\n                        }\r\n                    </Grid>\r\n                    <Grid item lg={2}>\r\n                        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Categoría\r\n                          </Typography>\r\n                        {\r\n                            embozos.filter(embozo => embozo.destino === 'Domicilio').map(fEmbozo => (\r\n                                <Typography key=\"domicilioCategoria\" ref={domicilioCategoria} className={classes.pos} color=\"textSecondary\">{fEmbozo.categoria}</Typography>))\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                Page Two\r\n      </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item lg={2}>\r\n                        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Exterior\r\n                          </Typography>\r\n                        <Typography className={classes.pos} color=\"textSecondary\">\r\n\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item lg={2}>\r\n                        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Embozo\r\n                          </Typography>\r\n                        {\r\n                            embozos.filter(embozo => embozo.destino === 'Exterior').map(fEmbozo => (\r\n                                <Typography key=\"exteriorEmbozo\" ref={exteriorEmbozo} className={classes.pos} color=\"textSecondary\">{fEmbozo.embozo}</Typography>))\r\n                        }\r\n                    </Grid>\r\n                    <Grid item lg={2}>\r\n                        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Categoría\r\n                          </Typography>\r\n                        {\r\n                            embozos.filter(embozo => embozo.destino === 'Exterior').map(fEmbozo => (\r\n                                <Typography key=\"exteriorCategoria\" ref={exteriorCategoria} className={classes.pos} color=\"textSecondary\">{fEmbozo.categoria}</Typography>))\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","import UtilsService from \"./utilsService\";\r\n\r\nconst ReprintService = {\r\n\r\n    getEmbozos(operationId, code) {\r\n        return UtilsService._call_get(UtilsService.URL() + '/reimpresion/tarjetas/embozos?operationId=' + operationId + '&codigo=' + code);\r\n    },\r\n\r\n    getCardDetails(operationId, cardNumber) {\r\n        return UtilsService._call_get(UtilsService.URL() + '/reimpresion/tarjetas/detalle?operationId=' + operationId + '&numero=' + cardNumber);\r\n    },\r\n\r\n    getBranchDetails(operationId) {\r\n        return UtilsService._call_get(UtilsService.URL() + '/transaccional/sucursales?operationId=' + operationId);\r\n    }\r\n\r\n}\r\n\r\nexport default ReprintService;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NavbarModule from '../commonsModule/navbarModule';\r\nimport HelpModule from '../commonsModule/helpModule';\r\nimport ButtonsModule from '../commonsModule/buttonsModule';\r\nimport LoadingModule from '../commonsModule/loadingModule';\r\nimport SnackbarModule from '../commonsModule/snackbarModule';\r\nimport DialogsModule from '../commonsModule/dialogsModule';\r\nimport UploadFile from '../commonsModule/uploadFile';\r\nimport line from '../../img/vertical-line.svg';\r\nimport Tabs from './tabs';\r\n\r\n// import css\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MuiAccordion from \"@material-ui/core/Accordion\";\r\nimport MuiAccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n// icons\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\n\r\n// services\r\nimport BaseService from '../services/baseService';\r\nimport UtilsService from \"../services/utilsService\";\r\nimport ReprintService from '../services/reprintService';\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  pos: { marginBottom: 12, },\r\n  line: { width: 6, paddingRight: 15, height: 16 },\r\n  divider: { marginTop: 25, marginBottom: 25 },\r\n  formControl: { width: '95%' },\r\n  heading: { flexBasis: '33.33%', flexShrink: 0 },\r\n  paddingLine: { padding: '0 16px' },\r\n  attach: { paddingRight: 15, verticalAlign: 'middle' },\r\n  secondaryHeading: { fontSize: theme.typography.pxToRem(15), color: theme.palette.text.secondary, alignSelf: 'center' },\r\n\r\n}));\r\n\r\nconst Accordion = withStyles({\r\n  root: {\r\n    boxShadow: \"none\",\r\n    \"&:not(:last-child)\": { borderBottom: 0 },\r\n    \"&:before\": { display: \"none\" },\r\n    \"&$expanded\": { margin: \"auto\" },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordion);\r\n\r\nconst AccordionSummary = withStyles({\r\n  root: {\r\n    marginBottom: -1, minHeight: 56,\r\n    \"&$expanded\": { minHeight: 56 },\r\n  },\r\n  content: {\r\n    \"&$expanded\": { margin: \"12px 0\" },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordionSummary);\r\n\r\nconst AccordionDetails = withStyles((theme) => ({\r\n  root: { padding: theme.spacing(2) },\r\n}))(MuiAccordionDetails);\r\n// end css\r\n\r\nexport default function ReprintFunc() {\r\n\r\n  // Entry params\r\n  let { operationId, option, documentType, documentNumber, businessName, contactModeCode, productCode, causeCode,\r\n    reasonCode, companyCode, responsibleSector, registerSector, user, origin,\r\n    initContact, closeContact, productNumber } = useParams();\r\n\r\n  // State variables\r\n  const [embozos, setEmbozos] = React.useState([]);\r\n  const [sucursales, setSucursales] = React.useState([]);\r\n  const [disable, setDisable] = React.useState(true);\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [expanded, setExpanded] = React.useState(\"\");\r\n  const [selectedDestino, setSelectedDestino] = React.useState('');\r\n  const [selectedSucursal, setSelectedSucursal] = React.useState('');\r\n  const [firstOpen, setFirstOpen] = React.useState(false);\r\n  const [secondOpen, setSecondOpen] = React.useState(false);\r\n  const [openUploadFiles, setOpenUploadFiles] = React.useState(false);\r\n  const [resultRequest, setResultRequest] = React.useState(\"\");\r\n  const [resultStatus, setResultStatus] = React.useState(\"\");\r\n  const [resultMsg, setResultMsg] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [showDomicilio, setShowDomicilio] = React.useState(false);\r\n  const [showSucursal, setShowSucursal] = React.useState(false);\r\n  const [showExterior, setShowExterior] = React.useState(false);\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n  const [severity, setSeverity] = React.useState('');\r\n  const [message, setMessage] = React.useState('');\r\n  // Add Files\r\n  const [isAddFiles, setIsAddFiles] = React.useState(false);\r\n  const [clientRelations, setClientRelations] = React.useState([]);\r\n  const [productRelations, setProductRelations] = React.useState([]);\r\n\r\n  // Ref variables\r\n  let domicilioEmbozo = React.useRef(null);\r\n  let domicilioCategoria = React.useRef(null);\r\n  let sucursalEmbozo = React.useRef(null);\r\n  let sucursalCategoria = React.useRef(null);\r\n  let exteriorEmbozo = React.useRef(null);\r\n  let exteriorCategoria = React.useRef(null);\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  // Get branches info\r\n  const updateBranches = () => {\r\n    ReprintService.getBranchDetails(operationId)\r\n      .then(dataSucursales => {\r\n        setSucursales(dataSucursales.branches);\r\n        setLoading(false);\r\n      })\r\n  }\r\n\r\n  // Handle onchange event (Sucursal)\r\n  const updateSelectedSucursal = (event, data) => {\r\n    setSelectedSucursal(data.props.label + \" (\" + data.props.value + \")\");\r\n  }\r\n\r\n  // Handle onchange event (Paneles)\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    if (panel === 'panelSucursal') { // Panel de Sucursal\r\n      setLoading(true);\r\n      updateBranches();\r\n      setSelectedDestino('SUCURSAL');\r\n      setDisable(true);\r\n    } else { // Panel de Domicilio\r\n      setSelectedSucursal(\"-\");\r\n      setSelectedDestino(panel === 'panelDomicilio' ? 'DOMICILIO' : 'EXTERIOR');\r\n    }\r\n    setExpanded(newExpanded ? panel : false);\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  // Funcion para guardar la registracion generada\r\n  const saveData = async (retry) => {\r\n\r\n    setFirstOpen(false);\r\n\r\n    let embozo = selectedDestino === 'DOMICILIO' ? domicilioEmbozo.current.outerText : sucursalEmbozo.current.outerText;\r\n    let category = selectedDestino === 'DOMICILIO' ? domicilioCategoria.current.outerText : sucursalCategoria.current.outerText;\r\n\r\n    if (embozo === 'SIN DATOS') {\r\n      setSeverity(\"error\")\r\n      setMessage(\"EMBOZO SIN VALOR\")\r\n      setOpenSnackbar(true)\r\n      return\r\n    }\r\n\r\n    if (category === 'SIN DATOS') {\r\n      setSeverity(\"error\")\r\n      setMessage(\"CATEGORÍA SIN VALOR\")\r\n      setOpenSnackbar(true)\r\n      return\r\n    }\r\n\r\n    setDisable(true);\r\n    setLoading(true);\r\n\r\n    let commonParams = UtilsService.getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, businessName, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, retry ? resultRequest : null);\r\n\r\n    // ADD Files\r\n    if (isAddFiles) {\r\n      commonParams.relTipoDocumentalCliente = clientRelations;\r\n      commonParams.relTipoDocumentalProducto = productRelations;\r\n      let productFiles = productRelations.filter(relation => relation.esAddFiles === true);\r\n      commonParams.adjuntarArchivos = productFiles.length > 0;\r\n    }\r\n\r\n    let reprintTdParams = _getReprintTdParams(embozo, category, \"-\", selectedSucursal);\r\n\r\n    let transactionalRequest = {}\r\n    transactionalRequest.commonParams = commonParams;\r\n    transactionalRequest.reprintTdParams = reprintTdParams;\r\n\r\n    // ADD Files\r\n    if (isAddFiles) {\r\n      let data = await BaseService.saveDataWithFiles(transactionalRequest);\r\n      let pedido = data.registration.requestNumber;\r\n      let mensaje = data.registration.message;\r\n      let estado = data.registration.status;\r\n      setSecondOpen(true);\r\n      setResultRequest(pedido);\r\n      setResultStatus(estado);\r\n      setResultMsg(mensaje);\r\n      setLoading(false);\r\n    } else {\r\n      BaseService.saveData(transactionalRequest)\r\n        .then(data => {\r\n          let pedido = data.registration.requestNumber;\r\n          let mensaje = data.registration.message;\r\n          let estado = data.registration.status;\r\n          setSecondOpen(true);\r\n          setResultRequest(pedido);\r\n          setResultStatus(estado);\r\n          setResultMsg(mensaje);\r\n          setLoading(false);\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  const getConfirmation = () => {\r\n    setFirstOpen(true);\r\n  }\r\n\r\n  // Funcion hook para consultar los detalles de la tarjeta y los embozos\r\n  React.useEffect(() => {\r\n    async function callAPI() {\r\n      ReprintService.getCardDetails(operationId, productNumber)\r\n        .then(data => {\r\n          ReprintService.getEmbozos(operationId, data.detalleTarjeta.reprint)\r\n            .then(dataEmbozos => {\r\n              setEmbozos(dataEmbozos.embozos);\r\n              setLoading(false);\r\n              dataEmbozos.embozos.map(embozo => {\r\n                if (embozo.destino === 'Domicilio') {\r\n                  setShowDomicilio(true);\r\n                }\r\n                if (embozo.destino === 'Sucursal') {\r\n                  setShowSucursal(true);\r\n                }\r\n                if (embozo.destino === 'Exterior') {\r\n                  setShowExterior(true);\r\n                }\r\n              })\r\n            });\r\n        })\r\n    }\r\n    callAPI();\r\n  }, [operationId, productNumber, setShowDomicilio, setShowSucursal, setShowExterior]);\r\n\r\n  // Funcion hook para consultar las relaciones de tipo documental\r\n  // Add Files\r\n  React.useEffect(() => {\r\n    async function callAPI() {\r\n      BaseService.getDocumentalRelations(operationId, causeCode, reasonCode, documentType, documentNumber)\r\n        .then(data => {\r\n          setIsAddFiles(data.adjuntarArchivos);\r\n          if (isAddFiles) {\r\n            setClientRelations(data.relTipoDocumentalCliente);\r\n            setProductRelations(data.relTipoDocumentalProducto);\r\n          }\r\n        })\r\n    }\r\n    callAPI();\r\n  }, [operationId, causeCode, reasonCode, documentType, isAddFiles, documentNumber]);\r\n\r\n  const printScreen = () => {\r\n    let embozo = selectedDestino === 'DOMICILIO' ? domicilioEmbozo.current.outerText : sucursalEmbozo.current.outerText;\r\n    let category = selectedDestino === 'DOMICILIO' ? domicilioCategoria.current.outerText : sucursalCategoria.current.outerText;\r\n\r\n    setLoading(true);\r\n\r\n    let commonParams = UtilsService.getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, resultRequest);\r\n\r\n    let reprintTdParams = _getReprintTdParams(embozo, category, \"-\", selectedSucursal);\r\n\r\n    let transactionalRequest = {}\r\n    transactionalRequest.commonParams = commonParams;\r\n    transactionalRequest.reprintTdParams = reprintTdParams;\r\n\r\n    BaseService.printData(transactionalRequest)\r\n      .then(data => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const _getReprintTdParams = (embozo, category, domicilio, sucursal) => {\r\n\r\n    let reprintTdParams = {};\r\n    reprintTdParams.embozo = embozo;\r\n    reprintTdParams.category = category;\r\n    reprintTdParams.domicilio = domicilio;\r\n    reprintTdParams.sucursal = sucursal;\r\n    return reprintTdParams;\r\n\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* start navbar */}\r\n      <NavbarModule></NavbarModule>\r\n      {/* end navbar */}\r\n\r\n      {/* start snackbar */}\r\n      <SnackbarModule openSnackbar={openSnackbar} severity={severity} message={message} setOpenSnackbar={setOpenSnackbar}></SnackbarModule>\r\n      {/* end snackbar */}\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container>\r\n          <Grid item lg={12} style={{width: '100%'}}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" className={classes.paddingLine}>\r\n                  <img src={line} className={classes.line} alt=\"logo\" />\r\n                  Cliente\r\n                </Typography>\r\n                <br></br>\r\n                <Grid container spacing={3}>\r\n                  <Grid item lg={5}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Apellido y Nombre\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {businessName}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item lg={2}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo y Nº de Documento\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {documentType} - {documentNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={2}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Nº Banelco\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {productNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={2}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo Tarjeta\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      P.TIT.ELECTRON\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n                <Typography variant=\"h5\" component=\"h2\" className={classes.paddingLine}>\r\n                  <img src={line} className={classes.line} alt=\"logo\" />\r\n                  Destino\r\n                </Typography>\r\n                <br></br>\r\n\r\n                {/* start tabs */}\r\n                {/* <Tabs embozos={embozos} domicilioEmbozo={domicilioEmbozo} domicilioCategoria={domicilioCategoria}\r\n                      exteriorCategoria={exteriorCategoria} exteriorEmbozo={exteriorEmbozo}></Tabs> */}\r\n                {/* end tabs */}\r\n\r\n                <div>\r\n                  <Accordion square expanded={expanded === \"panelDomicilio\"} key='acc-domicilio' style={{ display: showDomicilio ? 'inherit' : 'none' }}>\r\n                    <AccordionSummary aria-controls=\"panelDomiciliod-content\" id=\"panelDomiciliod-header\">\r\n                      <FormControl component=\"fieldset\">\r\n                        <RadioGroup aria-label=\"destino\" name=\"domicilio\" value={value} onChange={handleChange(\"panelDomicilio\")}\r\n                          onClick={() => setDisable(false)}>\r\n                          <FormControlLabel value=\"panelDomicilio\" control={<Radio />} label=\"Domicilio\" />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Domicilio\r\n                          </Typography>\r\n                          <Typography className={classes.pos} color=\"textSecondary\">\r\n\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Embozo\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Domicilio').map(fEmbozo => (\r\n                              <Typography key=\"domicilioEmbozo\" ref={domicilioEmbozo} className={classes.pos} color=\"textSecondary\">\r\n                                {fEmbozo.embozo}\r\n                              </Typography>))\r\n                          }\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Categoría\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Domicilio').map(fEmbozo => (\r\n                              <Typography key=\"domicilioCategoria\" ref={domicilioCategoria} className={classes.pos} color=\"textSecondary\">{fEmbozo.categoria}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                  <Accordion square expanded={expanded === \"panelSucursal\"} key='acc-sucursal' style={{ display: showSucursal ? 'inherit' : 'none' }}>\r\n                    <AccordionSummary aria-controls=\"panelSucursald-content\" id=\"panelSucursald-header\">\r\n                      <FormControl component=\"fieldset\">\r\n                        <RadioGroup aria-label=\"destino\" name=\"sucursal\" value={value} onChange={handleChange(\"panelSucursal\")}>\r\n                          <FormControlLabel value=\"panelSucursal\" control={<Radio />} label=\"Sucursal\" />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item lg={3}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Sucursal\r\n                          </Typography>\r\n                          <FormControl className={classes.formControl}>\r\n                            <Select onChange={updateSelectedSucursal}>\r\n                              {sucursales.map((sucursal) =>\r\n                                <MenuItem onClick={() => setDisable(false)} value={sucursal.numBranch} label={sucursal.branch}>{sucursal.branch}</MenuItem>)}\r\n                            </Select>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Embozo\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Sucursal').map(fEmbozo => (\r\n                              <Typography key=\"sucursalEmbozo\" ref={sucursalEmbozo} className={classes.pos} color=\"textSecondary\">{fEmbozo.embozo}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Categoría\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Sucursal').map(fEmbozo => (\r\n                              <Typography key=\"sucursalCategoria\" ref={sucursalCategoria} className={classes.pos} color=\"textSecondary\">{fEmbozo.categoria}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                  <Accordion square expanded={expanded === \"panelExterior\"} key='acc-exterior' style={{ display: showExterior ? 'inherit' : 'none' }}>\r\n                    <AccordionSummary aria-controls=\"panelExteriord-content\" id=\"panelExteriord-header\">\r\n                      <FormControl component=\"fieldset\">\r\n                        <RadioGroup aria-label=\"destino\" name=\"exterior\" value={value} onChange={handleChange(\"panelExterior\")}\r\n                          onClick={() => setDisable(false)}>\r\n                          <FormControlLabel value=\"panelExterior\" control={<Radio />} label=\"Exterior\" />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Exterior\r\n                          </Typography>\r\n                          <Typography className={classes.pos} color=\"textSecondary\">\r\n\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Embozo\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Exterior').map(fEmbozo => (\r\n                              <Typography key=\"exteriorEmbozo\" ref={exteriorEmbozo} className={classes.pos} color=\"textSecondary\">{fEmbozo.embozo}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Categoría\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Exterior').map(fEmbozo => (\r\n                              <Typography key=\"exteriorCategoria\" ref={exteriorCategoria} className={classes.pos} color=\"textSecondary\">{fEmbozo.categoria}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                </div>\r\n                <br></br>\r\n                <HelpModule />\r\n                <br></br>\r\n\r\n                {/* start ADD Files */}\r\n                {isAddFiles ?\r\n                  <Accordion style={{ backgroundColor: '#f5f5f5' }}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1bh-content\" id=\"panel1bh-header\">\r\n                      <Typography className={classes.heading} variant=\"h5\" component=\"h2\">\r\n                        <AttachFileIcon size=\"large\" color=\"secondary\" className={classes.attach} />\r\n                        Adjuntar Archivos\r\n                      </Typography>\r\n                      <Typography className={classes.secondaryHeading}>Expanda acá para gestionar adjuntos</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <UploadFile clientRelations={clientRelations} productRelations={productRelations}></UploadFile>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                  : <div></div>}\r\n                {/* end ADD Files */}\r\n\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Start Loading Module */}\r\n        <LoadingModule loading={loading}></LoadingModule>\r\n        {/* End Loading Module */}\r\n\r\n        {/* Start Dialog */}\r\n        <DialogsModule saveData={saveData} resultRequest={resultRequest} resultStatus={resultStatus}\r\n          resultMsg={resultMsg} firstOpen={firstOpen} setFirstOpen={setFirstOpen} printScreen={printScreen}\r\n          secondOpen={secondOpen} setSecondOpen={setSecondOpen} openUploadFiles={openUploadFiles}\r\n          setOpenUploadFiles={setOpenUploadFiles}></DialogsModule>\r\n        {/* End Dialog */}\r\n\r\n        {/* Start Buttons Module */}\r\n        <ButtonsModule disable={disable} getConfirmation={getConfirmation} valueButton={\"Guardar\"}></ButtonsModule>\r\n        {/* End Buttons Module */}\r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NavbarModule from '../commonsModule/navbarModule';\r\nimport HelpModule from '../commonsModule/helpModule';\r\nimport DialogsModule from '../commonsModule/dialogsModule';\r\nimport ButtonsModule from '../commonsModule/buttonsModule';\r\nimport LoadingModule from '../commonsModule/loadingModule';\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// services\r\nimport BaseService from '../services/baseService';\r\nimport UtilsService from \"../services/utilsService\";\r\n\r\n// start css\r\nconst useStyles = makeStyles(() => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  pos: { marginBottom: 12, },\r\n  divider: { marginTop: 25, marginBottom: 25 },\r\n  formControl: { width: '95%' },\r\n\r\n}));\r\n// end css\r\n\r\nexport default function DischargeFunc() {\r\n\r\n  // Entry params\r\n  let { operationId, option, documentType, documentNumber, businessName, contactModeCode, productCode, causeCode,\r\n    reasonCode, companyCode, responsibleSector, registerSector, user, origin,\r\n    initContact, closeContact, productNumber } = useParams();\r\n\r\n  // State variables\r\n  const [disable, setDisable] = React.useState(false);\r\n  const [firstOpen, setFirstOpen] = React.useState(false);\r\n  const [secondOpen, setSecondOpen] = React.useState(false);\r\n  const [resultRequest, setResultRequest] = React.useState(\"\");\r\n  const [resultStatus, setResultStatus] = React.useState(\"\");\r\n  const [resultMsg, setResultMsg] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  // Funcion para guardar la registracion generada\r\n  const saveData = (retry) => {\r\n    setFirstOpen(false);\r\n    setDisable(true);\r\n    setLoading(true);\r\n\r\n    let commonParams = UtilsService.getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, businessName, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, retry ? resultRequest : null);\r\n\r\n    let transactionalRequest = {}\r\n    transactionalRequest.commonParams = commonParams;\r\n\r\n    BaseService.saveData(transactionalRequest)\r\n      .then(data => {\r\n        let pedido = data.registration.requestNumber;\r\n        let mensaje = data.registration.message;\r\n        let estado = data.registration.status;\r\n        setSecondOpen(true);\r\n        setResultRequest(pedido);\r\n        setResultStatus(estado);\r\n        setResultMsg(mensaje);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const getConfirmation = () => {\r\n    setFirstOpen(true);\r\n  }\r\n\r\n  const printData = () => {\r\n    setLoading(true);\r\n\r\n    let commonParams = UtilsService.getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, resultRequest);\r\n\r\n    let transactionalRequest = {}\r\n    transactionalRequest.commonParams = commonParams;\r\n\r\n    BaseService.printData(transactionalRequest)\r\n      .then(data => {\r\n        console.log(data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* Start Navbar Module */}\r\n      <NavbarModule />\r\n      {/* End Navbar Module */}\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container>\r\n          <Grid item lg={12} style={{width: '100%'}}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Cliente\r\n                </Typography>\r\n                <br></br>\r\n                <Grid container spacing={6}>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Apellido y Nombre\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {businessName}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo y Nº de Documento\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {documentType} - {documentNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n                <Grid container spacing={6}>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Nº Banelco\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {productNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo Tarjeta\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      P.TIT.ELECTRON\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <br></br>\r\n                <HelpModule />\r\n                <br></br>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Start Loading Module */}\r\n        <LoadingModule loading={loading}></LoadingModule>\r\n        {/* End Loading Module */}\r\n\r\n        {/* Start Dialog */}\r\n        <DialogsModule saveData={saveData} resultRequest={resultRequest} resultStatus={resultStatus}\r\n          resultMsg={resultMsg} firstOpen={firstOpen} setFirstOpen={setFirstOpen} printScreen={printData}\r\n          secondOpen={secondOpen} setSecondOpen={setSecondOpen}></DialogsModule>\r\n        {/* End Dialog */}\r\n\r\n        {/* Start Buttons Module */}\r\n        <ButtonsModule disable={disable} getConfirmation={getConfirmation} valueButton={\"Guardar\"}></ButtonsModule>\r\n        {/* End Buttons Module */}\r\n      </Container>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NavbarModule from '../commonsModule/navbarModule';\r\nimport HelpModule from '../commonsModule/helpModule';\r\nimport DialogsModule from '../commonsModule/dialogsModule';\r\nimport ButtonsModule from '../commonsModule/buttonsModule';\r\nimport LoadingModule from '../commonsModule/loadingModule';\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// services\r\nimport BaseService from '../services/baseService';\r\nimport UtilsService from \"../services/utilsService\";\r\n\r\n// start css\r\nconst useStyles = makeStyles(() => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  pos: { marginBottom: 12, },\r\n  divider: { marginTop: 25, marginBottom: 25 },\r\n  formControl: { width: '95%' },\r\n\r\n}));\r\n// end css\r\n\r\nexport default function DischargeFunc() {\r\n\r\n  // Entry params\r\n  let { operationId, option, documentType, documentNumber, businessName, contactModeCode, productCode, causeCode,\r\n    reasonCode, companyCode, responsibleSector, registerSector, user, origin,\r\n    initContact, closeContact, productNumber } = useParams();\r\n\r\n  // State variables\r\n  const [disable, setDisable] = React.useState(false);\r\n  const [firstOpen, setFirstOpen] = React.useState(false);\r\n  const [secondOpen, setSecondOpen] = React.useState(false);\r\n  const [resultRequest, setResultRequest] = React.useState(\"\");\r\n  const [resultStatus, setResultStatus] = React.useState(\"\");\r\n  const [resultMsg, setResultMsg] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  // Funcion para guardar la registracion generada\r\n  const saveData = (retry) => {\r\n    setFirstOpen(false);\r\n    setDisable(true);\r\n    setLoading(true);\r\n\r\n    let commonParams = UtilsService.getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, businessName, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, retry ? resultRequest : null);\r\n\r\n    let transactionalRequest = {}\r\n    transactionalRequest.commonParams = commonParams;\r\n\r\n    BaseService.saveData(transactionalRequest)\r\n      .then(data => {\r\n        let pedido = data.registration.requestNumber;\r\n        let mensaje = data.registration.message;\r\n        let estado = data.registration.status;\r\n        setSecondOpen(true);\r\n        setResultRequest(pedido);\r\n        setResultStatus(estado);\r\n        setResultMsg(mensaje);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const getConfirmation = () => {\r\n    setFirstOpen(true);\r\n  }\r\n\r\n  const printData = () => {\r\n    setLoading(true);\r\n\r\n    BaseService.printData(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, \"\",\r\n      \"\", \"\", \"\", resultRequest)\r\n      .then(data => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* Start Navbar Module */}\r\n      <NavbarModule />\r\n      {/* End Navbar Module */}\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container>\r\n          <Grid item lg={12} style={{width: '100%'}}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Cliente\r\n                </Typography>\r\n                <br></br>\r\n                <Grid container spacing={6}>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Apellido y Nombre\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {businessName}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo y Nº de Documento\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {documentType} - {documentNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n                <Grid container spacing={6}>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Nº Banelco\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {productNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo Tarjeta\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      P.TIT.ELECTRON\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <br></br>\r\n                <HelpModule />\r\n                <br></br>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Start Loading Module */}\r\n        <LoadingModule loading={loading}></LoadingModule>\r\n        {/* End Loading Module */}\r\n\r\n        {/* Start Dialog */}\r\n        <DialogsModule saveData={saveData} resultRequest={resultRequest} resultStatus={resultStatus}\r\n          resultMsg={resultMsg} firstOpen={firstOpen} setFirstOpen={setFirstOpen} printScreen={printData}\r\n          secondOpen={secondOpen} setSecondOpen={setSecondOpen}></DialogsModule>\r\n        {/* End Dialog */}\r\n\r\n        {/* Start Buttons Module */}\r\n        <ButtonsModule disable={disable} getConfirmation={getConfirmation} valueButton={\"Blanquear PIN\"}></ButtonsModule>\r\n        {/* End Buttons Module */}\r\n      </Container>\r\n    </div>\r\n  );\r\n}","import UtilsService from \"./utilsService\";\r\n\r\nconst CloseChangeService = {\r\n\r\n    getTarjetas(operationId, docType, docNum) {\r\n        return UtilsService._call_get(UtilsService.URL() + '/cambioCierre/tarjetas?operationId=' + operationId + '&docType=' + docType + '&docNum=' + docNum);\r\n    }\r\n\r\n}\r\n\r\nexport default CloseChangeService;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NavbarModule from '../commonsModule/navbarModule';\r\nimport HelpModule from '../commonsModule/helpModule';\r\nimport DialogsModule from '../commonsModule/dialogsModule';\r\nimport ButtonsModule from '../commonsModule/buttonsModule';\r\nimport LoadingModule from '../commonsModule/loadingModule';\r\n\r\n// import css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n// services\r\nimport BaseService from '../services/baseService';\r\nimport CloseChangeService from \"../services/closeChangeService\";\r\nimport UtilsService from \"../services/utilsService\";\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  pos: { marginBottom: 12, },\r\n  divider: { marginTop: 25, marginBottom: 25 },\r\n  formControl: { width: '95%' },\r\n  formControl2: { margin: theme.spacing(1), minWidth: 120 },\r\n  selectEmpty: { marginTop: theme.spacing(2) },\r\n\r\n}));\r\nconst tabla = makeStyles(() => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n// end css\r\n\r\nexport default function CloseChangeFunc() {\r\n\r\n  // Entry params\r\n  let { operationId, option, documentType, documentNumber, businessName, contactModeCode, productCode, causeCode,\r\n    reasonCode, companyCode, responsibleSector, registerSector, user, origin,\r\n    initContact, closeContact, productNumber } = useParams();\r\n\r\n  // State variables\r\n  const [disable, setDisable] = React.useState(true);\r\n  const [firstOpen, setFirstOpen] = React.useState(false);\r\n  const [secondOpen, setSecondOpen] = React.useState(false);\r\n  const [resultRequest, setResultRequest] = React.useState(\"\");\r\n  const [resultStatus, setResultStatus] = React.useState(\"\");\r\n  const [resultMsg, setResultMsg] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [cartera, setCartera] = React.useState(\"\");\r\n  const [rows, setRows] = React.useState([]);\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n  const classTable = tabla();\r\n\r\n  // Funcion para guardar la registracion generada\r\n  const saveData = (retry) => {\r\n    setFirstOpen(false);\r\n    setDisable(true);\r\n    setLoading(true);\r\n\r\n    let commonsParams = UtilsService.getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, businessName, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, retry ? resultRequest : null);\r\n\r\n    let closeChangeParams = _getCloseChangeParams(rows[0]);\r\n\r\n    let transactionalRequest = {}\r\n    transactionalRequest.commonParams = commonsParams;\r\n    transactionalRequest.closeChangeParams = closeChangeParams;\r\n\r\n    BaseService.saveData(transactionalRequest)\r\n      .then(data => {\r\n        let pedido = data.registration.requestNumber;\r\n        let mensaje = data.registration.message;\r\n        let estado = data.registration.status;\r\n        setSecondOpen(true);\r\n        setResultRequest(pedido);\r\n        setResultStatus(estado);\r\n        setResultMsg(mensaje);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const getConfirmation = () => {\r\n    setFirstOpen(true);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    async function callAPI() {\r\n      CloseChangeService.getTarjetas(operationId, documentType, documentNumber)\r\n        .then(data => {\r\n          setRows(data.cardAccArr);\r\n          setLoading(false);\r\n        })\r\n    }\r\n    callAPI();\r\n  }, [operationId, documentType, documentNumber]);\r\n\r\n  const printData = () => {\r\n    setLoading(true);\r\n\r\n    let commonsParams = UtilsService.getCommonParams(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, resultRequest);\r\n\r\n    let closeChangeParams = _getCloseChangeParams(rows[0]);\r\n\r\n    let transactionalRequest = {}\r\n    transactionalRequest.commonParams = commonsParams;\r\n    transactionalRequest.closeChangeParams = closeChangeParams;\r\n\r\n    BaseService.printData(transactionalRequest)\r\n      .then(data => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const _getCloseChangeParams = (row) => {\r\n    let closeChangeParams = {};\r\n    closeChangeParams.tipoCliente = \"Titular\";\r\n    closeChangeParams.apellidoNombre = row.cardhName;\r\n    closeChangeParams.nroTarjeta = row.cardNum;\r\n    closeChangeParams.estado = row.primAcctInfo.statDesc;\r\n    closeChangeParams.cartera = cartera;\r\n    closeChangeParams.entityAdm = row.acctIdNum;\r\n    closeChangeParams.codeAdm = row.restrCde;\r\n    return closeChangeParams;\r\n  }\r\n\r\n  const handleChange = (event, data) => {\r\n    if (rows.length > 0) {\r\n      setDisable(false);\r\n    }\r\n    setCartera(data.props.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* Start Navbar Module */}\r\n      <NavbarModule />\r\n      {/* End Navbar Module */}\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container>\r\n          <Grid item lg={12} style={{width: '100%'}}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Cliente\r\n                </Typography>\r\n                <br></br>\r\n                <Grid container spacing={6}>\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Apellido y Nombre\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {businessName}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item lg={4}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo y Nº de Documento\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {documentType} - {documentNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n                <Grid container spacing={5}>\r\n                  <TableContainer>\r\n                    <Table className={classTable.table} size=\"small\" aria-label=\"customized tablee\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell align=\"left\"><strong>Tipo</strong></TableCell>\r\n                          <TableCell align=\"left\"><strong>Documento</strong></TableCell>\r\n                          <TableCell align=\"left\"><strong>Apellido y Nombre</strong></TableCell>\r\n                          <TableCell align=\"left\"><strong>Número de Tarjeta</strong></TableCell>\r\n                          <TableCell align=\"left\"><strong>Estado</strong></TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {rows.map((row) =>\r\n                          <TableRow key={row.cardNum}>\r\n                            <TableCell component=\"th\" scope=\"row\">{'Titular'}</TableCell>\r\n                            <TableCell align=\"left\">{row.typeIdfcCde} {row.idfcNum}</TableCell>\r\n                            <TableCell align=\"left\">{row.cardhName}</TableCell>\r\n                            <TableCell align=\"left\">{row.cardNum}</TableCell>\r\n                            <TableCell align=\"left\">{row.primAcctInfo.statDesc}</TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Grid>\r\n\r\n                <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n                <Grid container spacing={6}>\r\n                  <Grid item lg={2} xs={6}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      <strong>Seleccione Cartera</strong>\r\n                    </Typography>\r\n                    <FormControl className={classes.formControl}>\r\n                      <Select onChange={handleChange} value={cartera}>\r\n                        <MenuItem value={\"01\"}>Cartera 1</MenuItem>\r\n                        <MenuItem value={\"02\"}>Cartera 2</MenuItem>\r\n                        <MenuItem value={\"03\"}>Cartera 3</MenuItem>\r\n                        <MenuItem value={\"04\"}>Cartera 4</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n                <br></br>\r\n                <br></br>\r\n                <HelpModule />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Start Loading Module */}\r\n        <LoadingModule loading={loading}></LoadingModule>\r\n        {/* End Loading Module */}\r\n\r\n        {/* Start Dialog */}\r\n        <DialogsModule saveData={saveData} resultRequest={resultRequest} resultStatus={resultStatus}\r\n          resultMsg={resultMsg} firstOpen={firstOpen} setFirstOpen={setFirstOpen} printScreen={printData}\r\n          secondOpen={secondOpen} setSecondOpen={setSecondOpen}></DialogsModule>\r\n        {/* End Dialog */}\r\n\r\n        {/* Start Buttons Module */}\r\n        <ButtonsModule disable={disable} getConfirmation={getConfirmation} valueButton={\"Guardar\"}></ButtonsModule>\r\n        {/* End Buttons Module */}\r\n      </Container>\r\n    </div>\r\n\r\n  );\r\n\r\n}","/* eslint-disable no-template-curly-in-string */\r\nimport React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport ReprintModule from './components/reprintModule/reprintModule';\r\nimport DischargeModule from './components/dischargeModule/dischargeModule';\r\nimport ResetPinModule from './components/resetPinModule/resetPinModule';\r\nimport CloseChangeModule from './components/closeChangeModule/closeChangeModule';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router basename={'/sactran'}>\r\n      <div>\r\n        <Switch>\r\n          <Route path={`${process.env.PUBLIC_URL}/reprint/:operationId/:option/:documentType/:documentNumber/:businessName/:contactModeCode/:productCode/:causeCode/:reasonCode/:companyCode/:responsibleSector/:registerSector/:user/:origin/:initContact/:closeContact/:productNumber`} component={Reprint} />\r\n          <Route path={`${process.env.PUBLIC_URL}/discharge/:operationId/:option/:documentType/:documentNumber/:businessName/:contactModeCode/:productCode/:causeCode/:reasonCode/:companyCode/:responsibleSector/:registerSector/:user/:origin/:initContact/:closeContact/:productNumber`} component={Discharge} />\r\n          <Route path={`${process.env.PUBLIC_URL}/resetPin/:operationId/:option/:documentType/:documentNumber/:businessName/:contactModeCode/:productCode/:causeCode/:reasonCode/:companyCode/:responsibleSector/:registerSector/:user/:origin/:initContact/:closeContact/:productNumber`} component={ResetPin} />\r\n          <Route path={`${process.env.PUBLIC_URL}/closeChange/:operationId/:option/:documentType/:documentNumber/:businessName/:contactModeCode/:productCode/:causeCode/:reasonCode/:companyCode/:responsibleSector/:registerSector/:user/:origin/:initContact/:closeContact/:productNumber`} component={CloseChange} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App\r\n\r\nfunction Reprint() {\r\n  return <ReprintModule></ReprintModule>;\r\n}\r\n\r\nfunction Discharge() {\r\n  return <DischargeModule></DischargeModule>;\r\n}\r\n\r\nfunction ResetPin() {\r\n  return <ResetPinModule></ResetPinModule>;\r\n}\r\n\r\nfunction CloseChange() {\r\n  return <CloseChangeModule></CloseChangeModule>;\r\n}","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App></App>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}